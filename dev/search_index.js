var documenterSearchIndex = {"docs":
[{"location":"dataset/#Dataset","page":"Dataset","title":"Dataset","text":"","category":"section"},{"location":"dataset/","page":"Dataset","title":"Dataset","text":"Many dataset operations are available through the indexing interface, which is aliased to the functional interface. Below describes the functional interface.","category":"page"},{"location":"dataset/","page":"Dataset","title":"Dataset","text":"create_dataset","category":"page"},{"location":"dataset/#HDF5.create_dataset","page":"Dataset","title":"HDF5.create_dataset","text":"create_dataset(parent, path, datatype, dataspace; properties...)\n\nArguments\n\nparent - File or Group\npath - String describing the path of the dataset within the HDF5 file\ndatatype - Datatype or Type or the dataset\ndataspace - Dataspace or Dims of the dataset\nproperties - keyword name-value pairs set properties of the dataset\n\nKeywords\n\nThere are many keyword properties that can be set. Below are a few select keywords.\n\nchunk - Dims describing the size of a chunk. Needed to apply filters.\nfilters - AbstractVector{<: Filters.Filter} describing the order of the filters to apply to the data. See Filters\nexternal - Tuple{AbstractString, Intger, Integer} (filepath, offset, filesize) External dataset file location, data offset, and file size. See API.h5p_set_external.\n\nSee also\n\nH5P\nDatasetCreateProperties\nDatasetTransferProperties\nDatasetAccessProperties\n\n\n\n\n\n","category":"function"},{"location":"properties/#Properties","page":"Properties","title":"Properties","text":"","category":"section"},{"location":"properties/","page":"Properties","title":"Properties","text":"CurrentModule = HDF5","category":"page"},{"location":"properties/","page":"Properties","title":"Properties","text":"HDF5 property lists are collections of name-value pairs which can be passed to other HDF5 functions to control features that are typically unimportant or whose default values are usually used. In HDF5.jl, these options are typically handled by keyword arguments to such functions, which will internally create the appropriate Properties objects, and so users will not usually be required to construct them manually.","category":"page"},{"location":"properties/","page":"Properties","title":"Properties","text":"Not all properties defined by the HDF5 library are currently available in HDF5.jl. If you require additional properties, please open an issue or pull request.","category":"page"},{"location":"properties/#Properties-types","page":"Properties","title":"Properties types","text":"","category":"section"},{"location":"properties/","page":"Properties","title":"Properties","text":"AttributeCreateProperties\nFileAccessProperties\nFileCreateProperties\nGroupCreateProperties\nDatasetCreateProperties\nDatasetAccessProperties\nDatasetTransferProperties\nLinkCreateProperties\nObjectCreateProperties\nStringCreateProperties\nDatatypeCreateProperties","category":"page"},{"location":"properties/#HDF5.AttributeCreateProperties","page":"Properties","title":"HDF5.AttributeCreateProperties","text":"AttributeCreateProperties(;kws...)\n\nProperties used when creating attributes.\n\nchar_encoding: the character enconding, either :ascii or :utf8.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.FileAccessProperties","page":"Properties","title":"HDF5.FileAccessProperties","text":"FileAccessProperties(;kws...)\n\nProperties used when accessing files.\n\nalignment :: Tuple{Integer, Integer}: a (threshold, alignment) pair: any file object greater than or equal in size to threshold bytes will be aligned on an address which is a multiple of alignment. Default values are 1, implying no alignment.\ndriver: the file driver used to access the file. See Drivers.\ndriver_info (get only)\nfclose_degree: file close degree property. One of:\n:weak\n:semi\n:strong\n:default\nlibver_bounds: a (low, high) pair: low sets the earliest possible format versions that the library will use when creating objects in the file; high sets the latest format versions that the library will be allowed to use when creating objects in the file. Values can be a VersionNumber for the hdf5 library, :earliest, or :latest . See H5P_SET_LIBVER_BOUNDS\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.FileCreateProperties","page":"Properties","title":"HDF5.FileCreateProperties","text":"FileCreateProperties(;kws...)\n\nProperties used when creating a new File. Inherits from ObjectCreateProperties,  with additional properties:\n\nuserblock :: Integer: user block size in bytes. The default user block size is 0; it may be set to any power of 2 equal to 512 or greater (512, 1024, 2048, etc.). See H5P_SET_USERBLOCK.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.GroupCreateProperties","page":"Properties","title":"HDF5.GroupCreateProperties","text":"GroupCreateProperties(;kws...)\n\nProperties used when creating a new Group. Inherits from ObjectCreateProperties, with additional options:\n\nlocal_heap_size_hint :: Integer: the anticipated maximum local heap size in bytes. See H5P_SET_LOCAL_HEAP_SIZE_HINT.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.DatasetCreateProperties","page":"Properties","title":"HDF5.DatasetCreateProperties","text":"DatasetCreateProperties(;kws...)\n\nProperties used when creating a new Dataset. Inherits from ObjectCreateProperties, with additional properties:\n\nalloc_time: the timing for the allocation of storage space for a dataset's raw data; one of:\n:default\n:early: allocate all space when the dataset is created\n:incremental: Allocate space incrementally, as data is  written to the dataset\n:late: Allocate all space when data is first written to the dataset.\nSee H5P_SET_ALLOC_TIME.\nchunk: a tuple containing the size of the chunks to store each dimension. See H5P_SET_CHUNK (note that this uses Julia's column-major ordering).\nexternal: A tuple of (name,offset,size), See H5P_SET_EXTERNAL.\nfilters (only valid when layout=:chunked): a filter or vector of filters that are applied to applied to each chunk of a dataset, see Filters. When accessed, will return a Filters.FilterPipeline object that can be modified in-place.\nlayout: the type of storage used to store the raw data for a dataset. Can be one of:\n:compact: Store raw data in the dataset object header in file. This should only be used for datasets with small amounts of raw data.\n:contiguous: Store raw data separately from the object header in one large chunk in the file.\n:chunked: Store raw data separately from the object header as chunks of data in separate locations in the file.\n:virtual:  Draw raw data from multiple datasets in different files.\nSee H5P_SET_LAYOUT.\n\nThe following options are shortcuts for the various filters, and are set-only. They will be appended to the filter pipeline in the order in which they appear\n\nblosc = true | level: set the H5Zblosc.BloscFilter compression filter; argument can be either true, or the compression level.\ndeflate = true | level: set the Filters.Deflate compression filter; argument can be either true, or the compression level.\nfletcher32 = true: set the Filters.Fletcher32 checksum filter.\nshuffle = true: set the Filters.Shuffle filter.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.DatasetAccessProperties","page":"Properties","title":"HDF5.DatasetAccessProperties","text":"DatasetAccessProperties(; kws...)\n\nProperties that control access to data in external, virtual, and chunked datasets.\n\nSee Dataset Access Properties\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.DatasetTransferProperties","page":"Properties","title":"HDF5.DatasetTransferProperties","text":"DatasetTransferProperties(;kws...)\n\nProperties used when transferring data to/from datasets\n\ndxpl_mpio: MPI transfer mode:\n:independent: use independent I/O access (default),\n:collective: use collective I/O access.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.LinkCreateProperties","page":"Properties","title":"HDF5.LinkCreateProperties","text":"LinkCreateProperties(;kws...)\n\nProperties used when creating links.\n\nchar_encoding: the character enconding, either :ascii or :utf8.\ncreate_intermediate_group :: Bool: if true, will create missing intermediate groups.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.ObjectCreateProperties","page":"Properties","title":"HDF5.ObjectCreateProperties","text":"ObjectCreateProperties(;kws...)\n\nProperties used when creating a new object. Available options:\n\nobj_track_times :: Bool: governs the recording of times associated with an object. If set to true, time data will be recorded. See H5P_SET_OBJ_TRACK_TIMES.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.StringCreateProperties","page":"Properties","title":"HDF5.StringCreateProperties","text":"StringCreateProperties(;kws...)\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.DatatypeCreateProperties","page":"Properties","title":"HDF5.DatatypeCreateProperties","text":"DatatypeCreateProperties(;kws...)\n\n\n\n\n\n","category":"type"},{"location":"properties/#Drivers","page":"Properties","title":"Drivers","text":"","category":"section"},{"location":"properties/","page":"Properties","title":"Properties","text":"CurrentModule = HDF5","category":"page"},{"location":"properties/","page":"Properties","title":"Properties","text":"File drivers determine how the HDF5 is accessed. These can be set as the driver property in FileAccessProperties.","category":"page"},{"location":"properties/","page":"Properties","title":"Properties","text":"CurrentModule = HDF5.Drivers","category":"page"},{"location":"properties/","page":"Properties","title":"Properties","text":"POSIX\nMPIO","category":"page"},{"location":"properties/#HDF5.Drivers.POSIX","page":"Properties","title":"HDF5.Drivers.POSIX","text":"POSIX()\n\nAlso referred to as SEC2, this driver uses POSIX file-system functions like read and write to perform I/O to a single, permanent file on local disk with no system buffering. This driver is POSIX-compliant and is the default file driver for all systems.\n\n\n\n\n\n","category":"type"},{"location":"properties/#HDF5.Drivers.MPIO","page":"Properties","title":"HDF5.Drivers.MPIO","text":"MPIO(comm::MPI.Comm, info::MPI.Info)\nMPIO(comm::MPI.Comm; kwargs....)\n\nThe parallel MPI file driver. This requires the use of MPI.jl, and a custom HDF5 binary that has been built with MPI support.\n\ncomm is the communicator over which the file will be opened.\ninfo/kwargs are MPI-IO options, and are passed to MPI_FILE_OPEN.\n\nExternal links\n\nH5P_SET_FAPL_MPIO\nParallel HDF5\n\n\n\n\n\n","category":"type"},{"location":"filters/#Filters","page":"Filters","title":"Filters","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"HDF5 supports filters for compression and validation: these are applied sequentially to each chunk of a dataset when writing data, and in reverse order when reading data.","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = HDF5","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"These can be set by passing a filter or vector of filters as a filters property to DatasetCreateProperties or via the filters keyword argument of create_dataset.","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = HDF5.Filters","category":"page"},{"location":"filters/#Example","page":"Filters","title":"Example","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"Filters","category":"page"},{"location":"filters/#HDF5.Filters","page":"Filters","title":"HDF5.Filters","text":"HDF5.Filters\n\nThis module contains the interface for using filters in HDF5.jl.\n\nExample Usage\n\nusing HDF5\nusing HDF5.Filters\n\n# Create a new file\nfn = tempname()\n\n# Create test data\ndata = rand(1000, 1000)\n\n# Open temp file for writing\nf = h5open(fn, \"w\") \n\n# Create datasets\ndsdeflate = create_dataset(f, \"deflate\", datatype(data), dataspace(data),\n                           chunk=(100, 100), deflate=3)\n\ndsshufdef = create_dataset(f, \"shufdef\", datatype(data), dataspace(data),\n                           chunk=(100, 100), shuffle=true, deflate=3)\n\ndsfiltdef = create_dataset(f, \"filtdef\", datatype(data), dataspace(data),\n                           chunk=(100, 100), filters=Filters.Deflate(3))\n\ndsfiltshufdef = create_dataset(f, \"filtshufdef\", datatype(data), dataspace(data),\n                               chunk=(100, 100), filters=[Filters.Shuffle(), Filters.Deflate(3)])\n\n# Write data\nwrite(dsdeflate, data)\nwrite(dsshufdef, data)\nwrite(dsfiltdef, data)\nwrite(dsfiltshufdef, data)\n\nclose(f)\n\nAdditonal Examples\n\nSee test/filter.jl for further examples.\n\n\n\n\n\n","category":"module"},{"location":"filters/#Built-in-Filters","page":"Filters","title":"Built-in Filters","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"Deflate\nShuffle\nFletcher32\nSzip\nNBit\nScaleOffset\nUnknownFilter","category":"page"},{"location":"filters/#HDF5.Filters.Deflate","page":"Filters","title":"HDF5.Filters.Deflate","text":"Deflate(level=5)\n\nDeflate/ZLIB lossless compression filter. level is an integer between 0 and 9, inclusive, denoting the compression level, with 0 being no compression, 9 being the highest compression (but slowest speed).\n\nExternal links\n\nH5P_SET_DEFLATE\nDeflate on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.Shuffle","page":"Filters","title":"HDF5.Filters.Shuffle","text":"Shuffle()\n\nThe shuffle filter de-interlaces a block of data by reordering the bytes. All the bytes from one consistent byte position of each data element are placed together in one block; all bytes from a second consistent byte position of each data element are placed together a second block; etc. For example, given three data elements of a 4-byte datatype stored as 012301230123, shuffling will re-order data as 000111222333. This can be a valuable step in an effective compression algorithm because the bytes in each byte position are often closely related to each other and putting them together can increase the compression ratio.\n\nAs implied above, the primary value of the shuffle filter lies in its coordinated use with a compression filter; it does not provide data compression when used alone. When the shuffle filter is applied to a dataset immediately prior to the use of a compression filter, the compression ratio achieved is often superior to that achieved by the use of a compression filter without the shuffle filter.\n\nExternal links\n\nH5P_SET_SHUFFLE\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.Fletcher32","page":"Filters","title":"HDF5.Filters.Fletcher32","text":"Fletcher32()\n\nThe Fletcher32 checksum filter. This doesn't perform compression, but instead checks the validity of the stored data.\n\nThis should be applied after any lossy filters have been applied.\n\nExternal links\n\nH5P_SET_FLETCHER32\nFletcher's checksum on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.Szip","page":"Filters","title":"HDF5.Filters.Szip","text":"Szip(coding=:nn, pixels_per_block=8)\n\nSzip compression lossless filter. Options:\n\ncoding: the coding method: either :ec (entropy coding) or :nn (nearest neighbors, default)\npixels_per_block: The number of pixels or data elements in each data block (typically 8, 10, 16, or 32)\n\nExternal links\n\nH5P_SET_SZIP\nSzip Compression in HDF Products\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.NBit","page":"Filters","title":"HDF5.Filters.NBit","text":"NBit()\n\nThe N-Bit filter.\n\nExternal links\n\nH5P_SET_NBIT\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.ScaleOffset","page":"Filters","title":"HDF5.Filters.ScaleOffset","text":"ScaleOffset(scale_type::Integer, scale_offset::Integer)\n\nThe scale-offset filter.\n\nExternal links\n\nH5P_SET_SCALEOFFSET\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.UnknownFilter","page":"Filters","title":"HDF5.Filters.UnknownFilter","text":"UnknownFilter(filter_id::API.H5Z_filter_t, flags::Cuint, data::Vector{Cuint}, name::String, config::Cuint)\n\nAn unknown filter.\n\n\n\n\n\n","category":"type"},{"location":"filters/#External-Filter-Packages","page":"Filters","title":"External Filter Packages","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"Several external Julia packages implement HDF5 filter plugins in Julia. As they are independent of HDF5.jl, they must be installed in order to use their plugins.","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"The H5Zblosc.jl, H5Zbzip2.jl, H5Zlz4.jl, and H5Zzstd.jl packages are maintained as independent subdirectory packages within the HDF5.jl repository.","category":"page"},{"location":"filters/#H5Zblosc.jl","page":"Filters","title":"H5Zblosc.jl","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = H5Zblosc","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"BloscFilter","category":"page"},{"location":"filters/#H5Zblosc.BloscFilter","page":"Filters","title":"H5Zblosc.BloscFilter","text":"BloscFilter(;level=5, shuffle=true, compressor=\"blosclz\")\n\nThe Blosc compression filter, using Blosc.jl. Options:\n\nlevel: compression level\nshuffle: whether to shuffle data before compressing (this option should be used instead of the Shuffle filter)\ncompressor: the compression algorithm. Call Blosc.compressors() for the available compressors.\n\nExternal links\n\nWhat Is Blosc?\nBlosc HDF5 Filter ID 32001\nBlosc HDF5 Plugin Repository (C code)\n\n\n\n\n\n","category":"type"},{"location":"filters/#H5Zbzip2.jl","page":"Filters","title":"H5Zbzip2.jl","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = H5Zbzip2","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"Bzip2Filter","category":"page"},{"location":"filters/#H5Zbzip2.Bzip2Filter","page":"Filters","title":"H5Zbzip2.Bzip2Filter","text":"Bzip2Filter(blockSize100k)\n\nApply Bzip2 compression. The filter id is 307.\n\nExternal Links\n\nBZIP2 HDF5 Filter ID 307\nPyTables Repository (C code)\n\n\n\n\n\n","category":"type"},{"location":"filters/#H5Zlz4.jl","page":"Filters","title":"H5Zlz4.jl","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = H5Zlz4","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"Lz4Filter","category":"page"},{"location":"filters/#H5Zlz4.Lz4Filter","page":"Filters","title":"H5Zlz4.Lz4Filter","text":"Lz4Filter(blockSize)\n\nApply LZ4 compression. blockSize is the main argument. The filter id is 32004.\n\nExternal Links\n\nLZ4 HDF5 Filter ID 32004\nLZ4 HDF5 Plugin Repository (C code)\n\n\n\n\n\n","category":"type"},{"location":"filters/#H5Zzstd.jl","page":"Filters","title":"H5Zzstd.jl","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = H5Zzstd","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"ZstdFilter","category":"page"},{"location":"filters/#H5Zzstd.ZstdFilter","page":"Filters","title":"H5Zzstd.ZstdFilter","text":"ZstdFilter(clevel)\n\nZstandard compression filter. clevel determines the compression level.\n\nExternal Links\n\nZstandard HDF5 Filter ID 32015\nZstandard HDF5 Plugin Repository (C code)\n\n\n\n\n\n","category":"type"},{"location":"filters/#Other-External-Filters","page":"Filters","title":"Other External Filters","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"Additional filters can be dynamically loaded by the HDF5 library. See External Links below for more information.","category":"page"},{"location":"filters/#Filter-Interface","page":"Filters","title":"Filter Interface","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"CurrentModule = HDF5.Filters","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"The filter interface is used to describe filters and obtain information on them.","category":"page"},{"location":"filters/","page":"Filters","title":"Filters","text":"Filter\nFilterPipeline\nFILTERS\nfilterid\nencoder_present\ndecoder_present\nfiltername\ncan_apply_func\ncan_apply_cfunc\nset_local_func\nset_local_cfunc\nfilter_func\nfilter_cfunc\nregister_filter","category":"page"},{"location":"filters/#HDF5.Filters.Filter","page":"Filters","title":"HDF5.Filters.Filter","text":"Filter\n\nAbstract type to describe HDF5 Filters. See the Extended Help for information on implementing a new filter.\n\nExtended Help\n\nFilter interface\n\nThe Filter interface is implemented upon the Filter subtype.\n\nSee API.h5z_register for details.\n\nRequired Methods to Implement\n\nfilterid - registered filter ID\nfilter_func - implement the actual filter\n\nOptional Methods to Implement\n\nfiltername - defaults to \"Unnamed Filter\"\nencoder_present - defaults to true\ndecoder_present - defaults to true\ncan_apply_func - defaults to nothing\nset_local_func - defaults to nothing\n\nAdvanced Methods to Implement\n\ncan_apply_cfunc - Defaults to wrapping @cfunction around the result of can_apply_func\nset_local_cfunc - Defaults to wrapping @cfunction around the result of set_local_func\nfilter_cfunc - Defaults to wrapping @cfunction around the result of filter_func\nregister_filter - Defaults to using the above functions to register the filter\n\nImplement the Advanced Methods to avoid @cfunction from generating a runtime closure which may not work on all systems.\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.FilterPipeline","page":"Filters","title":"HDF5.Filters.FilterPipeline","text":"FilterPipeline(plist::DatasetCreateProperties)\n\nThe filter pipeline associated with plist. Acts like a AbstractVector{Filter}, supporting the following operations:\n\nlength(pipeline): the number of filters.\npipeline[i] to return the ith filter.\npipeline[FilterType] to return a filter of type FilterType\npush!(pipline, filter) to add an extra filter to the pipeline.\nappend!(pipeline, filters) to add multiple filters to the pipeline.\ndelete!(pipeline, FilterType) to remove a filter of type FilterType from the pipeline.\nempty!(pipeline) to remove all filters from the pipeline.\n\n\n\n\n\n","category":"type"},{"location":"filters/#HDF5.Filters.FILTERS","page":"Filters","title":"HDF5.Filters.FILTERS","text":"FILTERS\n\nMaps filter id to filter type.\n\n\n\n\n\n","category":"constant"},{"location":"filters/#HDF5.Filters.filterid","page":"Filters","title":"HDF5.Filters.filterid","text":"filterid(F) where {F <: Filter}\n\nThe internal filter id of a filter of type F.\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.encoder_present","page":"Filters","title":"HDF5.Filters.encoder_present","text":"encoder_present(::Type{F}) where {F<:Filter}\n\nCan the filter have an encode or compress the data? Defaults to true. Returns a Bool. See API.h5z_register.\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.decoder_present","page":"Filters","title":"HDF5.Filters.decoder_present","text":"decoder_present(::Type{F}) where {F<:Filter}\n\nCan the filter decode or decompress the data? Defaults to true. Returns a Bool. See API.h5z_register\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.filtername","page":"Filters","title":"HDF5.Filters.filtername","text":"filtername(::Type{F}) where {F<:Filter}\n\nWhat is the name of a filter? Defaults to \"Unnamed Filter\" Returns a String describing the filter. See API.h5z_register\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.can_apply_func","page":"Filters","title":"HDF5.Filters.can_apply_func","text":"can_apply_func(::Type{F}) where {F<:Filter}\n\nReturn a function indicating whether the filter can be applied or nothing if no function exists. The function signature is func(dcpl_id::API.hid_t, type_id::API.hid_t, space_id::API.hid_t). See API.h5z_register\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.can_apply_cfunc","page":"Filters","title":"HDF5.Filters.can_apply_cfunc","text":"can_apply_cfunc(::Type{F}) where {F<:Filter}\n\nReturn a C function pointer for the can apply function. By default, this will return the result of using @cfunction on the function specified by can_apply_func(F) or C_NULL if nothing.\n\nOverriding this will allow @cfunction to return a Ptr{Nothing} rather than a CFunction` closure which may not work on all systems.\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.set_local_func","page":"Filters","title":"HDF5.Filters.set_local_func","text":"set_local_func(::Type{F}) where {F<:Filter}\n\nReturn a function that sets dataset specific parameters or nothing if no function exists. The function signature is func(dcpl_id::API.hid_t, type_id::API.hid_t, space_id::API.hid_t). See API.h5z_register.\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.set_local_cfunc","page":"Filters","title":"HDF5.Filters.set_local_cfunc","text":"set_local_cfunc(::Type{F}) where {F<:Filter}\n\nReturn a C function pointer for the set local function. By default, this will return the result of using @cfunction on the function specified by set_local_func(F) or C_NULL if nothing.\n\nOverriding this will allow @cfunction to return a Ptr{Nothing} rather than a CFunction` closure which may not work on all systems.\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.filter_func","page":"Filters","title":"HDF5.Filters.filter_func","text":"filter_func(::Type{F}) where {F<:Filter}\n\nReturns a function that performs the actual filtering.\n\nSee API.h5z_register\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.filter_cfunc","page":"Filters","title":"HDF5.Filters.filter_cfunc","text":"filter_cfunc(::Type{F}) where {F<:Filter}\n\nReturn a C function pointer for the filter function. By default, this will return the result of using @cfunction on the function specified by filter_func(F) or will throw an error if nothing.\n\nOverriding this will allow @cfunction to return a Ptr{Nothing} rather than a CFunction` closure which may not work on all systems.\n\n\n\n\n\n","category":"function"},{"location":"filters/#HDF5.Filters.register_filter","page":"Filters","title":"HDF5.Filters.register_filter","text":"register_filter(::Type{F}) where F <: Filter\n\nRegister the filter with the HDF5 library via API.h5z_register. Also add F to the FILTERS dictionary.\n\n\n\n\n\n","category":"function"},{"location":"filters/#External-Links","page":"Filters","title":"External Links","text":"","category":"section"},{"location":"filters/","page":"Filters","title":"Filters","text":"A list of registered filter plugins can be found on the HDF Group website.\nSee the HDF5 Documentation of HDF5 Filter Plugins for details.\nThe source code for many external plugins have been collected in the HDFGroup hdf5_plugins repository.\nCompiled binaries of dynamically downloaded plugins by downloaded from HDF5 Group.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = HDF5","category":"page"},{"location":"#HDF5.jl","page":"Home","title":"HDF5.jl","text":"","category":"section"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"HDF5 stands for Hierarchical Data Format v5 and is closely modeled on file systems. In HDF5, a \"group\" is analogous to a directory, a \"dataset\" is like a file. HDF5 also uses \"attributes\" to associate metadata with a particular group or dataset. HDF5 uses ASCII names for these different objects, and objects can be accessed by Unix-like pathnames, e.g., \"/sample1/tempsensor/firsttrial\" for a top-level group \"sample1\", a subgroup \"tempsensor\", and a dataset \"firsttrial\".","category":"page"},{"location":"","page":"Home","title":"Home","text":"For simple types (scalars, strings, and arrays), HDF5 provides sufficient metadata to know how each item is to be interpreted. For example, HDF5 encodes that a given block of bytes is to be interpreted as an array of Int64, and represents them in a way that is compatible across different computing architectures.","category":"page"},{"location":"","page":"Home","title":"Home","text":"However, to preserve Julia objects, one generally needs additional type information to be supplied, which is easy to provide using attributes. This is handled for you automatically in the JLD/JLD2. These specific formats (conventions) provide \"extra\" functionality, but they are still both regular HDF5 files and are therefore compatible with any HDF5 reader or writer.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Language wrappers for HDF5 are often described as either \"low level\" or \"high level.\" This package contains both flavors: at the low level, it directly wraps HDF5's functions, thus copying their API and making them available from within Julia. At the high level, it provides a set of functions built on the low-level wrap which may make the usage of this library more convenient.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia>]\npkg> add HDF5","category":"page"},{"location":"","page":"Home","title":"Home","text":"Starting from Julia 1.3, the HDF5 binaries are by default downloaded using the HDF5_jll package.","category":"page"},{"location":"#Using-custom-or-system-provided-HDF5-binaries","page":"Home","title":"Using custom or system provided HDF5 binaries","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To use system-provided HDF5 binaries instead, set the environment variable JULIA_HDF5_PATH to the top-level installation directory HDF5, i.e. the library should be located in ${JULIA_HDF5_PATH}/lib. Then run import Pkg; Pkg.build(\"HDF5\"). In particular, this is required if you need parallel HDF5 support, which is not provided by the HDF5_jll binaries.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For example, to use HDF5 (libhdf5-mpich-dev) with MPI using system libraries on Ubuntu 20.04, you would run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"$ sudo apt install mpich libhdf5-mpich-dev\n$ JULIA_HDF5_PATH=/usr/lib/x86_64-linux-gnu/hdf5/mpich/\n$ JULIA_MPI_BINARY=system","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then in Julia, run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> build","category":"page"},{"location":"#Opening-and-closing-files","page":"Home","title":"Opening and closing files","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"\"Plain\" (i.e., with no extra formatting conventions) HDF5 files are created and/or opened with the h5open command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"fid = h5open(filename, mode)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The mode can be any one of the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mode Meaning\n\"r\" read-only\n\"r+\" read-write, preserving any existing contents\n\"cw\" read-write, create file if not existing, preserve existing contents\n\"w\" read-write, destroying any existing contents (if any)","category":"page"},{"location":"","page":"Home","title":"Home","text":"For example","category":"page"},{"location":"","page":"Home","title":"Home","text":"using HDF5\nfname = tempname(); # temporary file\nfid = h5open(fname, \"w\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"This produces an object of type HDF5File, a subtype of the abstract type DataFile. This file will have no elements (groups, datasets, or attributes) that are not explicitly created by the user.","category":"page"},{"location":"","page":"Home","title":"Home","text":"When you're finished with a file, you should close it:","category":"page"},{"location":"","page":"Home","title":"Home","text":"close(fid)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Closing a file also closes any other open objects (e.g., datasets, groups) in that file. In general, you need to close an HDF5 file to \"release\" it for use by other applications.","category":"page"},{"location":"#Writing-a-group-or-dataset","page":"Home","title":"Writing a group or dataset","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Groups can be created as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"create_group(fid, \"mygroup\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can write the \"mydataset\" by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"fid[\"mydataset\"] = rand()","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or","category":"page"},{"location":"","page":"Home","title":"Home","text":"create_dataset(fid, \"myvector\", rand(10))","category":"page"},{"location":"","page":"Home","title":"Home","text":"Writing to a dataset to a group is as simple as:","category":"page"},{"location":"","page":"Home","title":"Home","text":"g = fid[\"mygroup\"]\ng[\"mydataset\"] = \"Hello World!\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"The do syntax is also supported, which will automatically take care of closing the file handle:","category":"page"},{"location":"","page":"Home","title":"Home","text":"h5open(\"example2.h5\", \"w\") do fid\n    create_group(fid, \"mygroup\")\nend","category":"page"},{"location":"#Opening-and-closing-objects","page":"Home","title":"Opening and closing objects","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have a file object fid, and this has a group or dataset called \"mygroup\" at the top level of a file, you can open it in the following way:","category":"page"},{"location":"","page":"Home","title":"Home","text":"obj = fid[\"mygroup\"]","category":"page"},{"location":"","page":"Home","title":"Home","text":"This does not read any data or attributes associated with the object, it's simply a handle for further manipulations. For example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"g = fid[\"mygroup\"]\ndset = g[\"mydataset\"]","category":"page"},{"location":"","page":"Home","title":"Home","text":"or simply","category":"page"},{"location":"","page":"Home","title":"Home","text":"dset = fid[\"mygroup/mydataset\"]","category":"page"},{"location":"","page":"Home","title":"Home","text":"When you're done with an object, you can close it using close(obj). If you forget to do this, it will be closed for you anyway when the file is closed, or if obj goes out of scope and gets garbage collected.","category":"page"},{"location":"#Reading-and-writing-data","page":"Home","title":"Reading and writing data","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Suppose you have a group g which contains a dataset with path \"mydataset\", and that you've also opened this dataset as dset = g[\"mydataset\"]. You can read information in this dataset in any of the following ways:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A = read(dset)\nA = read(g, \"mydataset\")\nAsub = dset[2:3, 1:3]","category":"page"},{"location":"","page":"Home","title":"Home","text":"The last syntax reads just a subset of the data array (assuming that dset is an array of sufficient size). libhdf5 has internal mechanisms for slicing arrays, and consequently if you need only a small piece of a large array, it can be faster to read just what you need rather than reading the entire array and discarding most of it.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Datasets can be created with either","category":"page"},{"location":"","page":"Home","title":"Home","text":"g[\"mydataset\"] = rand(3,5)\nwrite(g, \"mydataset\", rand(3,5))","category":"page"},{"location":"#Passing-parameters","page":"Home","title":"Passing parameters","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"It is often required to pass parameters to specific routines, which are collected in so-called property lists in HDF5. There are different property lists for different tasks, e.g. for the access/creation of files, datasets, groups. In this high level framework multiple parameters can be simply applied by appending them at the end of function calls as keyword arguments.","category":"page"},{"location":"","page":"Home","title":"Home","text":"g[\"A\"] = A  # basic\ng[\"A\", chunk=(5,5)] = A # add chunks\n\nB = h5read(fn,\"mygroup/B\", # two parameters\n  fapl_mpio=(ccomm,cinfo), # if parameter requires multiple args use tuples\n  dxpl_mpio=HDF5.H5FD_MPIO_COLLECTIVE )","category":"page"},{"location":"","page":"Home","title":"Home","text":"This will automatically create the correct property lists, add the properties, and apply the property list while reading/writing the data. The naming of the properties generally follows that of HDF5, i.e. the key fapl_mpio returns the HDF5 functions h5pget/set_fapl_mpio and their corresponding property list type H5P_FILE_ACCESS. The complete list if routines and their interfaces is available at the H5P: Property List Interface documentation. Note that not all properties are available. When searching for a property check whether the corresponding h5pget/set functions are available.","category":"page"},{"location":"#Chunking-and-compression","page":"Home","title":"Chunking and compression","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can also optionally \"chunk\" and/or compress your data. For example,","category":"page"},{"location":"","page":"Home","title":"Home","text":"A = rand(100,100)\ng[\"A\", chunk=(5,5)] = A","category":"page"},{"location":"","page":"Home","title":"Home","text":"stores the matrix A in 5-by-5 chunks. Chunking improves efficiency if you write or extract small segments or slices of an array, if these are not stored contiguously.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A = rand(100,100)\ng1[\"A\", chunk=(5,5), compress=3] = A\ng2[\"A\", chunk=(5,5), shuffle=(), deflate=3] = A\nusing H5Zblosc # load in Blosc\ng3[\"A\", chunk=(5,5), blosc=3] = A","category":"page"},{"location":"","page":"Home","title":"Home","text":"Standard compression in HDF5 (\"compress\") corresponds to (\"deflate\") and uses the deflate/zlib algorithm. The deflate algorithm is often more efficient if prefixed by a \"shuffle\" filter. Blosc is generally much faster than deflate – however, reading Blosc-compressed HDF5 files require Blosc to be installed. This is the case for Julia, but often not for vanilla HDF5 distributions that may be used outside Julia. (In this case, the structure of the HDF5 file is still accessible, but compressed datasets cannot be read.) Compression requires chunking, and heuristic chunking is automatically used if you specify compression but don't specify chunking.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It is also possible to write to subsets of an on-disk HDF5 dataset. This is useful to incrementally save to very large datasets you don't want to keep in memory. For example,","category":"page"},{"location":"","page":"Home","title":"Home","text":"dset = create_dataset(g, \"B\", datatype(Float64), dataspace(1000,100,10), chunk=(100,100,1))\ndset[:,1,1] = rand(1000)","category":"page"},{"location":"","page":"Home","title":"Home","text":"creates a Float64 dataset in the file or group g, with dimensions 1000x100x10, and then writes to just the first 1000 element slice. If you know the typical size of subset reasons you'll be reading/writing, it can be beneficial to set the chunk dimensions appropriately.","category":"page"},{"location":"","page":"Home","title":"Home","text":"More fine-grained control is also available.","category":"page"},{"location":"#Memory-mapping","page":"Home","title":"Memory mapping","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you will frequently be accessing individual elements or small regions of array datasets, it can be substantially more efficient to bypass HDF5 routines and use direct memory mapping. This is possible only under particular conditions: when the dataset is an array of standard \"bits\" types (e.g., Float64 or Int32) and no chunking/compression is being used. You can use the ismmappable function to test whether this is possible; for example,","category":"page"},{"location":"","page":"Home","title":"Home","text":"dset = g[\"x\"]\nif HDF5.ismmappable(dset)\n    dset = HDF5.readmmap(dset)\nend\nval = dset[15]","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that readmmap returns an Array rather than an HDF5 object.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note: if you use readmmap on a dataset and subsequently close the file, the array data are still available–-and file continues to be in use–-until all of the arrays are garbage-collected. This is in contrast to standard HDF5 datasets, where closing the file prevents further access to any of the datasets, but the file is also detached and can safely be rewritten immediately.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Under the default allocation-time policy, a newly added ismmappable dataset can only be memory mapped after it has been written to. The following fails:","category":"page"},{"location":"","page":"Home","title":"Home","text":"vec_dset = create_dataset(g, \"v\", datatype(Float64), dataspace(10_000,1))\nHDF5.ismmappable(vec_dset)    # == true\nvec = HDF5.readmmap(vec_dset) # throws ErrorException(\"Error mmapping array\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"because although the dataset description has been added, the space within the HDF5 file has not yet actually been allocated (so the file region cannot be memory mapped by the OS). The storage can be allocated by making at least one write:","category":"page"},{"location":"","page":"Home","title":"Home","text":"vec_dset[1,1] = 0.0      # force allocation of /g/v within the file\nvec = HDF5.readmmap(vec_dset) # and now the memory mapping can succeed","category":"page"},{"location":"","page":"Home","title":"Home","text":"Alternatively, the policy can be set so that the space is allocated immediately upon creation of the data set with the alloc_time keyword:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mtx_dset = create_dataset(g, \"M\", datatype(Float64), dataspace(100, 1000),\n                    alloc_time = HDF5.H5D_ALLOC_TIME_EARLY)\nmtx = HDF5.readmmap(mtx_dset) # succeeds immediately","category":"page"},{"location":"#Supported-data-types","page":"Home","title":"Supported data types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"HDF5.jl knows how to store values of the following types: signed and unsigned integers of 8, 16, 32, and 64 bits, Float32, Float64; Complex versions of these numeric types; Arrays of these numeric types (including complex versions); ASCIIString and UTF8String; and Arrays of these two string types. Arrays of strings are supported using HDF5's variable-length-strings facility. By default Complex numbers are stored as compound types with r and i fields following the h5py convention. When reading data, compound types with matching field names will be loaded as the corresponding Complex Julia type. These field names are configurable with the HDF5.set_complex_field_names(real::AbstractString, imag::AbstractString) function and complex support can be completely enabled/disabled with HDF5.enable/disable_complex_support().","category":"page"},{"location":"","page":"Home","title":"Home","text":"For Arrays, note that the array dimensionality is preserved, including 0-length dimensions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"fid[\"zero_vector\"] = zeros(0)\nfid[\"zero_matrix\"] = zeros(0, 0)\nsize(fid[\"zero_vector\"]) # == (0,)\nsize(fid[\"zero_matrix\"]) # == (0, 0)","category":"page"},{"location":"","page":"Home","title":"Home","text":"An exception to this rule is Julia's 0-dimensional Array, which is stored as an HDF5 scalar because there is a value to be preserved:","category":"page"},{"location":"","page":"Home","title":"Home","text":"fid[\"zero_dim_value\"] = fill(1.0π)\nread(fid[\"zero_dim_value\"]) # == 3.141592653589793, != [3.141592653589793]","category":"page"},{"location":"","page":"Home","title":"Home","text":"HDF5 also has the concept of a null array which contains a type but has neither size nor contents, which is represented by the type HDF5.EmptyArray:","category":"page"},{"location":"","page":"Home","title":"Home","text":"fid[\"empty_array\"] = HDF5.EmptyArray{Float32}()\nHDF5.isnull(fid[\"empty_array\"]) # == true\nsize(fid[\"empty_array\"]) # == ()\neltype(fid[\"empty_array\"]) # == Float32","category":"page"},{"location":"","page":"Home","title":"Home","text":"This module also supports HDF5's VLEN, OPAQUE, and REFERENCE types, which can be used to encode more complex types. In general, you need to specify how you want to combine these more advanced facilities to represent more complex data types. For many of the data types in Julia, the JLD module implements support. You can likewise define your own file format if, for example, you need to interact with some external program that has explicit formatting requirements.","category":"page"},{"location":"#Creating-groups-and-attributes","page":"Home","title":"Creating groups and attributes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Create a new group in the following way:","category":"page"},{"location":"","page":"Home","title":"Home","text":"g = create_group(parent, name)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The named group will be created as a child of the parent.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Attributes can be created using","category":"page"},{"location":"","page":"Home","title":"Home","text":"attributes(parent)[name] = value","category":"page"},{"location":"","page":"Home","title":"Home","text":"where attributes simply indicates that the object referenced by name (a string) is an attribute, not another group or dataset. (Datasets cannot have child datasets, but groups can have either.) value must be a simple type: BitsKinds, strings, and arrays of either of these. The HDF5 standard recommends against storing large objects as attributes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The value stored in an attribute can be retrieved like","category":"page"},{"location":"","page":"Home","title":"Home","text":"read_attribute(parent, name)","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can also access the value of an attribute by indexing, like so:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> attr = attribute(parent)[name];\njulia> attr[]","category":"page"},{"location":"#Getting-information","page":"Home","title":"Getting information","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"HDF5.name(obj)","category":"page"},{"location":"","page":"Home","title":"Home","text":"will return the full HDF5 pathname of object obj.","category":"page"},{"location":"","page":"Home","title":"Home","text":"keys(g)","category":"page"},{"location":"","page":"Home","title":"Home","text":"returns a string array containing all objects inside group g. These relative pathnames, not absolute pathnames.","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can iterate over the objects in a group, i.e.,","category":"page"},{"location":"","page":"Home","title":"Home","text":"for obj in g\n  data = read(obj)\n  println(data)\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"This gives you a straightforward way of recursively exploring an entire HDF5 file.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you need to know whether group g has a dataset named mydata, you can test that with","category":"page"},{"location":"","page":"Home","title":"Home","text":"if haskey(g, \"mydata\")\n   ...\nend\ntf = haskey(g, \"mydata\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"If instead you want to know whether g has an attribute named myattribute, do it this way:","category":"page"},{"location":"","page":"Home","title":"Home","text":"tf = haskey(attributes(g), \"myattribute\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you have an HDF5 object, and you want to know where it fits in the hierarchy of the file, the following can be useful:","category":"page"},{"location":"","page":"Home","title":"Home","text":"p = parent(obj)     # p is the parent object (usually a group)\nfn = HDF5.filename(obj)  # fn is a string\ng = HDF5.root(obj)       # g is the group \"/\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"For array objects (datasets and attributes) the following methods work:","category":"page"},{"location":"","page":"Home","title":"Home","text":"dims = size(dset)\nnd = ndims(dset)\nlen = length(dset)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Objects can be created with properties, and you can query those properties in the following way:","category":"page"},{"location":"","page":"Home","title":"Home","text":"p = HDF5.get_create_properties(dset)\nchunksz = HDF5.get_chunk(p)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The simpler syntax chunksz = HDF5.get_chunk(dset) is also available.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Finally, sometimes you need to be able to conveniently test whether a file is an HDF5 file:","category":"page"},{"location":"","page":"Home","title":"Home","text":"tf = HDF5.ishdf5(filename)","category":"page"},{"location":"#Mid-level-routines","page":"Home","title":"Mid-level routines","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Sometimes you might want more fine-grained control, which can be achieved using a different set of routines. For example,","category":"page"},{"location":"","page":"Home","title":"Home","text":"g = open_group(parent, name)\ndset = open_dataset(parent, name[, apl])\nattr = open_attribute(parent, name)\nt = open_datatype(parent, name)","category":"page"},{"location":"","page":"Home","title":"Home","text":"These open the named group, dataset, attribute, and committed datatype, respectively. For datasets, apl stands for \"access parameter list\" and provides opportunities for more sophisticated control (see the HDF5 documentation).","category":"page"},{"location":"","page":"Home","title":"Home","text":"New objects can be created in the following ways:","category":"page"},{"location":"","page":"Home","title":"Home","text":"g = create_group(parent, name[, lcpl, dcpl])\ndset = create_dataset(parent, name, data[, lcpl, dcpl, dapl])\nattr = create_attribute(parent, name, data)","category":"page"},{"location":"","page":"Home","title":"Home","text":"creates groups, datasets, and attributes without writing any data to them. You can then use write(obj, data) to store the data. The optional property lists allow even more fine-grained control. This syntax uses data to infer the object's \"HDF5.datatype\" and \"HDF5.dataspace\"; for the most explicit control, data can be replaced with dtype, dspace, where dtype is an HDF5.Datatype and dspace is an HDF5.Dataspace.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Analogously, to create committed data types, use","category":"page"},{"location":"","page":"Home","title":"Home","text":"t = commit_datatype(parent, name, dtype[, lcpl, tcpl, tapl])","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can create and write data in one step,","category":"page"},{"location":"","page":"Home","title":"Home","text":"write_dataset(parent, name, data[, lcpl, dcpl, dapl])\nwrite_attribute(parent, name, data)","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can use extendible dimensions,","category":"page"},{"location":"","page":"Home","title":"Home","text":"d = create_dataset(parent, name, dtype, (dims, max_dims), chunk=(chunk_dims))\nHDF5.set_extent_dims(d, new_dims)","category":"page"},{"location":"","page":"Home","title":"Home","text":"where dims is a tuple of integers. For example","category":"page"},{"location":"","page":"Home","title":"Home","text":"b = create_dataset(fid, \"b\", Int, ((1000,),(-1,)), chunk=(100,)) #-1 is equivalent to typemax(hsize_t)\nHDF5.set_extent_dims(b, (10000,))\nb[1:10000] = collect(1:10000)","category":"page"},{"location":"","page":"Home","title":"Home","text":"when dimensions are reduced, the truncated data is lost. A maximum dimension of -1 is often referred to as unlimited dimensions, though it is limited by the maximum size of an unsigned integer.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Finally, it's possible to delete objects:","category":"page"},{"location":"","page":"Home","title":"Home","text":"delete_object(parent, name)   # for groups, datasets, and datatypes\ndelete_attribute(parent, name)   # for attributes","category":"page"},{"location":"#Low-level-routines","page":"Home","title":"Low-level routines","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Many of the most commonly-used libhdf5 functions have been wrapped. These are not exported, so you need to preface them with HDF5.function to use them. The library follows a consistent convention: for example, libhdf5's H5Adelete is wrapped with a Julia function called h5a_delete. The arguments are exactly as specified in the HDF5 reference manual.","category":"page"},{"location":"","page":"Home","title":"Home","text":"HDF5 is a large library, and the low-level wrap is not complete. However, many of the most-commonly used functions are wrapped, and in general wrapping a new function takes only a single line of code. Users who need additional functionality are encourage to contribute it.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that Julia's HDF5 directly uses the \"2\" interfaces, e.g., H5Dcreate2, so you need to have version 1.8 of the HDF5 library or later.","category":"page"},{"location":"#Parallel-HDF5","page":"Home","title":"Parallel HDF5","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"It is possible to read and write parallel HDF5 files using MPI. For this, the HDF5 binaries loaded by HDF5.jl must have been compiled with parallel support, and linked to the specific MPI implementation that will be used for parallel I/O.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Parallel-enabled HDF5 libraries are usually included in computing clusters and linked to the available MPI implementations. They are also available via the package manager of a number of Linux distributions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Finally, note that the MPI.jl package is lazy-loaded by HDF5.jl using Requires. In practice, this means that in Julia code, MPI must be imported before HDF5 for parallel functionality to be available.","category":"page"},{"location":"#Setting-up-Parallel-HDF5","page":"Home","title":"Setting-up Parallel HDF5","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The following step-by-step guide assumes one already has access to parallel-enabled HDF5 libraries linked to an existent MPI installation.","category":"page"},{"location":"#.-Using-system-provided-MPI-libraries","page":"Home","title":"1. Using system-provided MPI libraries","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Set the environment variable JULIA_MPI_BINARY=system and then run ]build MPI from Julia. For more control, one can also set the JULIA_MPI_PATH environment variable to the top-level installation directory of the MPI library. See the MPI.jl docs for details.","category":"page"},{"location":"#.-Using-parallel-HDF5-libraries","page":"Home","title":"2. Using parallel HDF5 libraries","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"As detailed in Using custom or system provided HDF5 binaries, set the JULIA_HDF5_PATH environment variable to the path where the parallel HDF5 binaries are located. Then run ]build HDF5 from Julia.","category":"page"},{"location":"#.-Loading-MPI-enabled-HDF5","page":"Home","title":"3. Loading MPI-enabled HDF5","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In Julia code, MPI.jl must be loaded before HDF5.jl for MPI functionality to be available:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using MPI\nusing HDF5","category":"page"},{"location":"#Reading-and-writing-data-in-parallel","page":"Home","title":"Reading and writing data in parallel","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A parallel HDF5 file may be opened by passing a MPI.Comm (and optionally a MPI.Info) object to h5open. For instance:","category":"page"},{"location":"","page":"Home","title":"Home","text":"comm = MPI.COMM_WORLD\ninfo = MPI.Info()\nff = h5open(filename, \"w\", comm, info)","category":"page"},{"location":"","page":"Home","title":"Home","text":"MPI-distributed data is typically written by first creating a dataset describing the global dimensions of the data. The following example writes a 10 × Nproc array distributed over Nproc MPI processes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Nproc = MPI.Comm_size(comm)\nmyrank = MPI.Comm_rank(comm)\nM = 10\nA = fill(myrank, M)  # local data\ndims = (M, Nproc)    # dimensions of global data\n\n# Create dataset\ndset = create_dataset(ff, \"/data\", datatype(eltype(A)), dataspace(dims))\n\n# Write local data\ndset[:, myrank + 1] = A","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that all MPI processes must call create_dataset with the same arguments.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Sometimes, it may be more efficient to write data in chunks, so that each process writes to a separate chunk of the file. This is especially the case when data is uniformly distributed among MPI processes. In this example, this can be achieved by passing chunk=(M, 1) to create_dataset.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For better performance, it is sometimes preferable to perform collective I/O when reading and writing datasets in parallel. This is achieved by passing dxpl_mpio=HDF5.H5FD_MPIO_COLLECTIVE to create_dataset. See also the HDF5 docs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A few more examples are available in test/mpio.jl.","category":"page"},{"location":"#Language-interoperability-with-row-and-column-major-order-arrays","page":"Home","title":"Language interoperability with row- and column-major order arrays","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"There are two main methods for storing multidimensional arrays in linear storage row-major order and column-major order. Julia, like Fortran and MATLAB, stores multidimensional arrays in column-major order, while other languages, including C and Python (NumPy), use row-major order. Therefore when reading an array in Julia from row-major order language the dimensions may be inverted.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To read a multidimensional array into the original shape from an HDF5 file written by Python (numpy and h5py) or C/C++/Objective-C, simply reverse the dimensions. For example, one may add the following line after reading the dataset dset:","category":"page"},{"location":"","page":"Home","title":"Home","text":"dset = permutedims(dset, reverse(1:ndims(dset)))","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that some languages or libraries use both methods, so please check the datset's description for details. For example, NumPy arrays are row-major by default, but NumPy can use either row-major or column-major ordered arrays.","category":"page"},{"location":"#Credits","page":"Home","title":"Credits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Konrad Hinsen initiated Julia's support for HDF5\nTim Holy and Simon Kornblith (primary authors)\nTom Short contributed code and ideas to the dictionary-like interface\nBlake Johnson made several improvements, such as support for iterating over attributes\nIsaiah Norton and Elliot Saba improved installation on Windows and OSX\nSteve Johnson contributed the do syntax and Blosc compression\nMike Nolta and Jameson Nash contributed code or suggestions for improving the handling of HDF5's constants\nThanks also to the users who have reported bugs and tested fixes","category":"page"},{"location":"#API-Reference","page":"Home","title":"API Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Below we include a limited number of API references. Note not all of these are public interfaces, thus proceed with caution.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\"]","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [HDF5]\nFilter = not_low_level_api","category":"page"},{"location":"#HDF5.SHOW_TREE_ICONS","page":"Home","title":"HDF5.SHOW_TREE_ICONS","text":"SHOW_TREE_ICONS = Ref{Bool}(true)\n\nConfigurable option to control whether emoji icons (true) or a plain-text annotation (false) is used to indicate the object type by show_tree.\n\n\n\n\n\n","category":"constant"},{"location":"#HDF5.SHOW_TREE_MAX_CHILDREN","page":"Home","title":"HDF5.SHOW_TREE_MAX_CHILDREN","text":"SHOW_TREE_MAX_CHILDREN = Ref{Int}(50)\n\nMaximum number of children to show at each node.\n\n\n\n\n\n","category":"constant"},{"location":"#HDF5.SHOW_TREE_MAX_DEPTH","page":"Home","title":"HDF5.SHOW_TREE_MAX_DEPTH","text":"SHOW_TREE_MAX_DEPTH = Ref{Int}(5)\n\nMaximum recursive depth to descend during printing.\n\n\n\n\n\n","category":"constant"},{"location":"#Base.isopen-Tuple{HDF5.File}","page":"Home","title":"Base.isopen","text":"isopen(obj::HDF5.File)\n\nReturns true if obj has not been closed, false if it has been closed.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.create_dataset-Tuple{Union{HDF5.File, HDF5.Group}, AbstractString, HDF5.Datatype, HDF5.Dataspace}","page":"Home","title":"HDF5.create_dataset","text":"create_dataset(parent, path, datatype, dataspace; properties...)\n\nArguments\n\nparent - File or Group\npath - String describing the path of the dataset within the HDF5 file\ndatatype - Datatype or Type or the dataset\ndataspace - Dataspace or Dims of the dataset\nproperties - keyword name-value pairs set properties of the dataset\n\nKeywords\n\nThere are many keyword properties that can be set. Below are a few select keywords.\n\nchunk - Dims describing the size of a chunk. Needed to apply filters.\nfilters - AbstractVector{<: Filters.Filter} describing the order of the filters to apply to the data. See Filters\nexternal - Tuple{AbstractString, Intger, Integer} (filepath, offset, filesize) External dataset file location, data offset, and file size. See API.h5p_set_external.\n\nSee also\n\nH5P\nDatasetCreateProperties\nDatasetTransferProperties\nDatasetAccessProperties\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.create_external-Tuple{Union{HDF5.File, HDF5.Group}, Any, Any, Any}","page":"Home","title":"HDF5.create_external","text":"create_external(source::Union{HDF5.File, HDF5.Group}, source_relpath, target_filename, target_path;\n                lcpl_id=HDF5.API.H5P_DEFAULT, lapl_id=HDF5.H5P.DEFAULT)\n\nCreate an external link such that source[source_relpath] points to target_path within the file with path target_filename; Calls [H5Lcreate_external](https://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateExternal).\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.create_external_dataset","page":"Home","title":"HDF5.create_external_dataset","text":"create_external_dataset(parent, name, filepath, dtype, dspace, offset = 0)\n\nCreate a external dataset with data in an external file.\n\nparent - File or Group\nname - Name of the Dataset\nfilepath - File path to where the data is tored\ndtype - Datatype, Type, or value where datatype is applicable\noffset - Offset, in bytes, from the beginning of the file to the location in the file where the data starts.\n\nUse API.h5p_set_external to link to multiple segments.\n\nSee also API.h5p_set_external\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.do_read_chunk-Tuple{HDF5.Dataset, Any}","page":"Home","title":"HDF5.do_read_chunk","text":"do_read_chunk(dataset::Dataset, offset)\n\nRead a raw chunk at a given offset. offset is a 1-based list of rank ndims(dataset) and must fall on a chunk boundary.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.do_read_chunk-Tuple{HDF5.Dataset, Integer}","page":"Home","title":"HDF5.do_read_chunk","text":"do_read_chunk(dataset::Dataset, index::Integer)\n\nRead a raw chunk at a given index. index is 1-based and consecutive up to the number of chunks.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.do_write_chunk","page":"Home","title":"HDF5.do_write_chunk","text":"do_write_chunk(dataset::Dataset, offset, chunk_bytes::AbstractArray, filter_mask=0)\n\nWrite a raw chunk at a given offset. chunk_bytes is an AbstractArray that can be converted to a pointer, Ptr{Cvoid}. offset is a 1-based list of rank ndims(dataset) and must fall on a chunk boundary.\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.do_write_chunk-2","page":"Home","title":"HDF5.do_write_chunk","text":"do_write_chunk(dataset::Dataset, index, chunk_bytes::AbstractArray, filter_mask=0)\n\nWrite a raw chunk at a given linear index. chunk_bytes is an AbstractArray that can be converted to a pointer, Ptr{Cvoid}. index is 1-based and consecutive up to the number of chunks.\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.get_chunk_index-Tuple{Any, Any}","page":"Home","title":"HDF5.get_chunk_index","text":"HDF5.get_chunk_index(dataset_id, offset)\n\nGet 0-based index of chunk from 0-based offset returned in Julia's column-major order. For a 1-based API, see HDF5.ChunkStorage.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.get_chunk_length-Tuple{Any}","page":"Home","title":"HDF5.get_chunk_length","text":"HDF5.get_chunk_length(dataset_id)\n\nRetrieves the chunk size in bytes. Equivalent to API.h5d_get_chunk_info(dataset_id, index)[:size].\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.get_chunk_offset-Tuple{Any, Any}","page":"Home","title":"HDF5.get_chunk_offset","text":"HDF5.get_chunk_offset(dataset_id, index)\n\nGet 0-based offset of chunk from 0-based index. The offsets are returned in Julia's column-major order rather than hdf5 row-major order. For a 1-based API, see HDF5.ChunkStorage.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.get_datasets-Tuple{HDF5.File}","page":"Home","title":"HDF5.get_datasets","text":"get_datasets(file::HDF5.File) -> datasets::Vector{HDF5.Dataset}\n\nGet all the datasets in an hdf5 file without loading the data.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.get_extent_dims-Tuple{Union{HDF5.Attribute, HDF5.Dataset, HDF5.Dataspace}}","page":"Home","title":"HDF5.get_extent_dims","text":"HDF5.get_extent_dims(obj::Union{HDF5.Dataspace, HDF5.Dataset, HDF5.Attribute}) -> dims, maxdims\n\nGet the array dimensions from a dataspace, dataset, or attribute and return a tuple of dims and maxdims.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.get_num_chunks-Tuple{Any}","page":"Home","title":"HDF5.get_num_chunks","text":"HDF5.get_num_chunks(dataset_id)\n\nReturns the number of chunks in a dataset. Equivalent to API.h5d_get_num_chunks(dataset_id, HDF5.H5S_ALL).\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.get_num_chunks_per_dim-Tuple{Any}","page":"Home","title":"HDF5.get_num_chunks_per_dim","text":"HDF5.get_num_chunks_per_dim(dataset_id)\n\nGet the number of chunks in each dimension in Julia's column-major order.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.h5open","page":"Home","title":"HDF5.h5open","text":"h5open(filename::AbstractString, mode::AbstractString=\"r\"; swmr=false, pv...)\n\nOpen or create an HDF5 file where mode is one of:\n\n\"r\"  read only\n\"r+\" read and write\n\"cw\" read and write, create file if not existing, do not truncate\n\"w\"  read and write, create a new file (destroys any existing contents)\n\nPass swmr=true to enable (Single Writer Multiple Reader) SWMR write access for \"w\" and \"r+\", or SWMR read access for \"r\".\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.h5open-Tuple{Function, Vararg{Any}}","page":"Home","title":"HDF5.h5open","text":"function h5open(f::Function, args...; swmr=false, pv...)\n\nApply the function f to the result of h5open(args...;kwargs...) and close the resulting HDF5.File upon completion. For example with a do block:\n\nh5open(\"foo.h5\",\"w\") do h5\n    h5[\"foo\"]=[1,2,3]\nend\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.has_parallel-Tuple{}","page":"Home","title":"HDF5.has_parallel","text":"has_parallel()\n\nReturns true if the HDF5 libraries were compiled with parallel support, and if parallel functionality was loaded into HDF5.jl.\n\nFor the second condition to be true, MPI.jl must be imported before HDF5.jl.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.ishdf5-Tuple{AbstractString}","page":"Home","title":"HDF5.ishdf5","text":"ishdf5(name::AbstractString)\n\nReturns true if the file specified by name is in the HDF5 format, and false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.isnull-Tuple{Union{HDF5.Attribute, HDF5.Dataset, HDF5.Dataspace}}","page":"Home","title":"HDF5.isnull","text":"isnull(dspace::Union{HDF5.Dataspace, HDF5.Dataset, HDF5.Attribute})\n\nDetermines whether the given object has no size (consistent with the API.H5S_NULL dataspace).\n\nExamples\n\njulia> HDF5.isnull(dataspace(HDF5.EmptyArray{Float64}()))\ntrue\n\njulia> HDF5.isnull(dataspace((0,)))\nfalse\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.read_attribute-Tuple{Union{HDF5.Dataset, HDF5.Datatype, HDF5.File, HDF5.Group}, AbstractString}","page":"Home","title":"HDF5.read_attribute","text":"read_attribute(parent::Union{File,Group,Dataset,Datatype}, name::AbstractString)\n\nRead the value of the named attribute on the parent object.\n\nExample\n\njulia> HDF5.read_attribute(g, \"time\")\n2.45\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.read_chunk","page":"Home","title":"HDF5.read_chunk","text":"HDF5.read_chunk(dataset_id, index::Integer, [buf]; dxpl_id = HDF5.API.H5P_DEFAULT, filters = Ref{UInt32}())\n\nHelper method to read chunks via 0-based integer index.\n\nArgument buf is optional and defaults to a Vector{UInt8} of length determined by HDF5.h5d_get_chunk_info. Argument dxpl_id can be supplied a keyword and defaults to HDF5.API.H5P_DEFAULT. Argument filters can be retrieved by supplying a Ref{UInt32} value via a keyword argument.\n\nThis method returns Vector{UInt8}.\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.read_chunk-2","page":"Home","title":"HDF5.read_chunk","text":"HDF5.read_chunk(dataset_id, offset, [buf]; dxpl_id = HDF5.API.H5P_DEFAULT, filters = Ref{UInt32}())\n\nHelper method to read chunks via 0-based offsets in a Tuple.\n\nArgument buf is optional and defaults to a Vector{UInt8} of length determined by HDF5.get_chunk_length. Argument dxpl_id can be supplied a keyword and defaults to HDF5.API.H5P_DEFAULT. Argument filters can be retrieved by supplying a Ref{UInt32} value via a keyword argument.\n\nThis method returns Vector{UInt8}.\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.set_extent_dims","page":"Home","title":"HDF5.set_extent_dims","text":"HDF5.set_extent_dims(dspace::HDF5.Dataspace, new_dims::Dims, max_dims::Union{Dims,Nothing} = nothing)\n\nChange the dimensions of a dataspace dspace to new_dims, optionally with the maximum possible dimensions max_dims different from the active size new_dims. If not given, max_dims is set equal to new_dims.\n\n\n\n\n\n","category":"function"},{"location":"#HDF5.set_extent_dims-Tuple{HDF5.Dataset, Tuple{Vararg{Int64, N}} where N}","page":"Home","title":"HDF5.set_extent_dims","text":"HDF5.set_extent_dims(dset::HDF5.Dataset, new_dims::Dims)\n\nChange the current dimensions of a dataset to new_dims, limited by max_dims = get_extent_dims(dset)[2]. Reduction is possible and leads to loss of truncated data.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.setproperties!-Tuple{Vararg{HDF5.Properties}}","page":"Home","title":"HDF5.setproperties!","text":"setproperties!(props::Properties...; kwargs...)\n\nFor each (key, value) pair in kwargs, set the corresponding properties in each Properties object in props. Returns a Dict of any pairs which didn't match properties in props.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.start_swmr_write-Tuple{HDF5.File}","page":"Home","title":"HDF5.start_swmr_write","text":"start_swmr_write(h5::HDF5.File)\n\nStart Single Reader Multiple Writer (SWMR) writing mode. See SWMR documentation.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.write_chunk-Tuple{Any, Any, AbstractArray}","page":"Home","title":"HDF5.write_chunk","text":"HDF5.write_chunk(dataset_id, offset, buf::AbstractArray; dxpl_id = HDF5.API.H5P_DEFAULT, filter_mask = 0)\n\nHelper method to write chunks via 0-based offsets offset as a Tuple.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.write_chunk-Tuple{Any, Integer, AbstractArray}","page":"Home","title":"HDF5.write_chunk","text":"HDF5.write_chunk(dataset_id, index::Integer, buf::AbstractArray; dxpl_id = API.H5P_DEFAULT, filter_mask = 0)\n\nHelper method to write chunks via 0-based integer index.\n\n\n\n\n\n","category":"method"},{"location":"#HDF5.@bool_property-Tuple{Any}","page":"Home","title":"HDF5.@bool_property","text":"@bool_property(name)\n\nWrap property getter/setter API functions that use 0/1 to use Bool values\n\n\n\n\n\n","category":"macro"},{"location":"#HDF5.@enum_property-Tuple{Any, Vararg{Any}}","page":"Home","title":"HDF5.@enum_property","text":"@enum_property(name, sym1 => enumvalue1, sym2 => enumvalue2, ...)\n\nWrap property getter/setter API functions that use enum values to use symbol instead.\n\n\n\n\n\n","category":"macro"},{"location":"#HDF5.@propertyclass-Tuple{Any, Any}","page":"Home","title":"HDF5.@propertyclass","text":"@propertyclass P classid\n\nDefine a new subtype of P <: Properties corresponding to a HDF5 property list with class identifier classid.\n\nOnce defined, the following interfaces can be defined:\n\nsuperclass(::Type{P})\n\nThis should return the type from which P inherits. If not defined, it will inherit from GenericProperties.\n\nclass_propertynames(::Type{P})\n\nThis should return a Tuple of Symbols, being the names of the properties associated with P.\n\nclass_getproperty(::Type{P}, p::Properties, name::Symbol)\n\nIf name is an associated property of type P, this should return the value of the propery, otherwise call class_getproperty(superclass(P), p, name).\n\nclass_setproperty!(::Type{P}, p::Properties, name::Symbol, val)\n\nIf name is an associated property of type P, this should set the value of the propery, otherwise call class_setproperty!(superclass(P), p, name, val).\n\n\n\n\n\n","category":"macro"},{"location":"#HDF5.@tuple_property-Tuple{Any}","page":"Home","title":"HDF5.@tuple_property","text":"@tuple_property(name)\n\n\n\n\n\n","category":"macro"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"<!-- This file is auto-generated and should not be manually editted. To update, run the\ngen/gen_wrappers.jl script -->","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"CurrentModule = HDF5.API","category":"page"},{"location":"api_bindings/#Low-level-library-bindings","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"At the lowest level, HDF5.jl operates by calling the public API of the HDF5 shared library through a set of ccall wrapper functions. This page documents the function names and nominal C argument types of the API which have bindings in this package. Note that in many cases, high-level data types are valid arguments through automatic ccall conversions. For instance, HDF5.Datatype objects will be automatically converted to their hid_t ID by Julia's cconvert+unsafe_convert ccall rules.","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"There are additional helper wrappers (often for out-argument functions) which are not documented here.","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5","page":"Low-level library bindings","title":"H5 — General Library Functions","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5_close\nh5_dont_atexit\nh5_free_memory\nh5_garbage_collect\nh5_get_libversion\nh5_is_library_threadsafe\nh5_open\nh5_set_free_list_limits","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5_close\nh5_dont_atexit\nh5_free_memory\nh5_garbage_collect\nh5_get_libversion\nh5_is_library_threadsafe\nh5_open\nh5_set_free_list_limits","category":"page"},{"location":"api_bindings/#HDF5.API.h5_close","page":"Low-level library bindings","title":"HDF5.API.h5_close","text":"h5_close()\n\nSee libhdf5 documentation for H5close.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_dont_atexit","page":"Low-level library bindings","title":"HDF5.API.h5_dont_atexit","text":"h5_dont_atexit()\n\nSee libhdf5 documentation for H5dont_atexit.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_free_memory","page":"Low-level library bindings","title":"HDF5.API.h5_free_memory","text":"h5_free_memory(buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5free_memory.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_garbage_collect","page":"Low-level library bindings","title":"HDF5.API.h5_garbage_collect","text":"h5_garbage_collect()\n\nSee libhdf5 documentation for H5garbage_collect.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_get_libversion","page":"Low-level library bindings","title":"HDF5.API.h5_get_libversion","text":"h5_get_libversion(majnum::Ref{Cuint}, minnum::Ref{Cuint}, relnum::Ref{Cuint})\n\nSee libhdf5 documentation for H5get_libversion.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_is_library_threadsafe","page":"Low-level library bindings","title":"HDF5.API.h5_is_library_threadsafe","text":"h5_is_library_threadsafe(is_ts::Ref{Cuint})\n\nSee libhdf5 documentation for H5is_library_threadsafe.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_open","page":"Low-level library bindings","title":"HDF5.API.h5_open","text":"h5_open()\n\nSee libhdf5 documentation for H5open.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5_set_free_list_limits","page":"Low-level library bindings","title":"HDF5.API.h5_set_free_list_limits","text":"h5_set_free_list_limits(reg_global_lim::Cint, reg_list_lim::Cint, arr_global_lim::Cint, arr_list_lim::Cint, blk_global_lim::Cint, blk_list_lim::Cint)\n\nSee libhdf5 documentation for H5set_free_list_limits.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5A","page":"Low-level library bindings","title":"H5A — Attribute Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5a_close\nh5a_create\nh5a_create_by_name\nh5a_delete\nh5a_delete_by_idx\nh5a_delete_by_name\nh5a_exists\nh5a_exists_by_name\nh5a_get_create_plist\nh5a_get_name\nh5a_get_name_by_idx\nh5a_get_space\nh5a_get_type\nh5a_iterate\nh5a_open\nh5a_read\nh5a_write","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5a_close\nh5a_create\nh5a_create_by_name\nh5a_delete\nh5a_delete_by_idx\nh5a_delete_by_name\nh5a_exists\nh5a_exists_by_name\nh5a_get_create_plist\nh5a_get_name\nh5a_get_name_by_idx\nh5a_get_space\nh5a_get_type\nh5a_iterate\nh5a_open\nh5a_read\nh5a_write","category":"page"},{"location":"api_bindings/#HDF5.API.h5a_close","page":"Low-level library bindings","title":"HDF5.API.h5a_close","text":"h5a_close(id::hid_t)\n\nSee libhdf5 documentation for H5Aclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_create","page":"Low-level library bindings","title":"HDF5.API.h5a_create","text":"h5a_create(loc_id::hid_t, pathname::Ptr{UInt8}, type_id::hid_t, space_id::hid_t, acpl_id::hid_t, aapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Acreate2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_create_by_name","page":"Low-level library bindings","title":"HDF5.API.h5a_create_by_name","text":"h5a_create_by_name(loc_id::hid_t, obj_name::Ptr{UInt8}, attr_name::Ptr{UInt8}, type_id::hid_t, space_id::hid_t, acpl_id::hid_t, aapl_id::hid_t, lapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Acreate_by_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_delete","page":"Low-level library bindings","title":"HDF5.API.h5a_delete","text":"h5a_delete(loc_id::hid_t, attr_name::Ptr{UInt8})\n\nSee libhdf5 documentation for H5Adelete.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_delete_by_idx","page":"Low-level library bindings","title":"HDF5.API.h5a_delete_by_idx","text":"h5a_delete_by_idx(loc_id::hid_t, obj_name::Ptr{UInt8}, idx_type::Cint, order::Cint, n::hsize_t, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Adelete_by_idx.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_delete_by_name","page":"Low-level library bindings","title":"HDF5.API.h5a_delete_by_name","text":"h5a_delete_by_name(loc_id::hid_t, obj_name::Ptr{UInt8}, attr_name::Ptr{UInt8}, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Adelete_by_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_exists","page":"Low-level library bindings","title":"HDF5.API.h5a_exists","text":"h5a_exists(obj_id::hid_t, attr_name::Ptr{UInt8}) -> Bool\n\nSee libhdf5 documentation for H5Aexists.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_exists_by_name","page":"Low-level library bindings","title":"HDF5.API.h5a_exists_by_name","text":"h5a_exists_by_name(loc_id::hid_t, obj_name::Ptr{UInt8}, attr_name::Ptr{UInt8}, lapl_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Aexists_by_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_get_create_plist","page":"Low-level library bindings","title":"HDF5.API.h5a_get_create_plist","text":"h5a_get_create_plist(attr_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Aget_create_plist.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_get_name","page":"Low-level library bindings","title":"HDF5.API.h5a_get_name","text":"h5a_get_name(attr_id::hid_t, buf_size::Csize_t, buf::Ptr{UInt8}) -> Cssize_t\n\nSee libhdf5 documentation for H5Aget_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_get_name_by_idx","page":"Low-level library bindings","title":"HDF5.API.h5a_get_name_by_idx","text":"h5a_get_name_by_idx(loc_id::hid_t, obj_name::Cstring, index_type::Cint, order::Cint, idx::hsize_t, name::Ptr{UInt8}, size::Csize_t, lapl_id::hid_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Aget_name_by_idx.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_get_space","page":"Low-level library bindings","title":"HDF5.API.h5a_get_space","text":"h5a_get_space(attr_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Aget_space.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_get_type","page":"Low-level library bindings","title":"HDF5.API.h5a_get_type","text":"h5a_get_type(attr_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Aget_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_iterate","page":"Low-level library bindings","title":"HDF5.API.h5a_iterate","text":"h5a_iterate(obj_id::hid_t, idx_type::Cint, order::Cint, n::Ptr{hsize_t}, op::Ptr{Cvoid}, op_data::Any)\n\nSee libhdf5 documentation for H5Aiterate2.\n\n\n\n\n\nh5a_iterate(f, loc_id, idx_type, order, idx = 0) -> hsize_t\n\nExecutes h5a_iterate with the user-provided callback function f, returning the index where iteration ends.\n\nThe callback function must correspond to the signature\n\n    f(loc::HDF5.API.hid_t, name::Ptr{Cchar}, info::Ptr{HDF5.API.H5A_info_t}) -> HDF5.API.herr_t\n\nwhere a negative return value halts iteration abnormally, a positive value halts iteration successfully, and zero continues iteration.\n\nExamples\n\njulia> HDF5.API.h5a_iterate(obj, HDF5.API.H5_INDEX_NAME, HDF5.API.H5_ITER_INC) do loc, name, info\n           println(unsafe_string(name))\n           return HDF5.API.herr_t(0)\n       end\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_open","page":"Low-level library bindings","title":"HDF5.API.h5a_open","text":"h5a_open(obj_id::hid_t, pathname::Ptr{UInt8}, aapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Aopen.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_read","page":"Low-level library bindings","title":"HDF5.API.h5a_read","text":"h5a_read(attr_id::hid_t, mem_type_id::hid_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Aread.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5a_write","page":"Low-level library bindings","title":"HDF5.API.h5a_write","text":"h5a_write(attr_hid::hid_t, mem_type_id::hid_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Awrite.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5D","page":"Low-level library bindings","title":"H5D — Dataset Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5d_close\nh5d_create\nh5d_extend\nh5d_fill\nh5d_flush\nh5d_gather\nh5d_get_access_plist\nh5d_get_chunk_info\nh5d_get_chunk_info_by_coord\nh5d_get_chunk_storage_size\nh5d_get_create_plist\nh5d_get_num_chunks\nh5d_get_offset\nh5d_get_space\nh5d_get_space_status\nh5d_get_storage_size\nh5d_get_type\nh5d_iterate\nh5d_open\nh5d_read\nh5d_read_chunk\nh5d_refresh\nh5d_scatter\nh5d_set_extent\nh5d_vlen_get_buf_size\nh5d_vlen_reclaim\nh5d_write\nh5d_write_chunk","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5d_close\nh5d_create\nh5d_extend\nh5d_fill\nh5d_flush\nh5d_gather\nh5d_get_access_plist\nh5d_get_chunk_info\nh5d_get_chunk_info_by_coord\nh5d_get_chunk_storage_size\nh5d_get_create_plist\nh5d_get_num_chunks\nh5d_get_offset\nh5d_get_space\nh5d_get_space_status\nh5d_get_storage_size\nh5d_get_type\nh5d_iterate\nh5d_open\nh5d_read\nh5d_read_chunk\nh5d_refresh\nh5d_scatter\nh5d_set_extent\nh5d_vlen_get_buf_size\nh5d_vlen_reclaim\nh5d_write\nh5d_write_chunk","category":"page"},{"location":"api_bindings/#HDF5.API.h5d_close","page":"Low-level library bindings","title":"HDF5.API.h5d_close","text":"h5d_close(dataset_id::hid_t)\n\nSee libhdf5 documentation for H5Dclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_create","page":"Low-level library bindings","title":"HDF5.API.h5d_create","text":"h5d_create(loc_id::hid_t, pathname::Ptr{UInt8}, dtype_id::hid_t, space_id::hid_t, lcpl_id::hid_t, dcpl_id::hid_t, dapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Dcreate2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_extend","page":"Low-level library bindings","title":"HDF5.API.h5d_extend","text":"h5d_extend(dataset_id::hid_t, size::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dextend.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_fill","page":"Low-level library bindings","title":"HDF5.API.h5d_fill","text":"h5d_fill(fill::Ptr{Cvoid}, fill_type_id::hid_t, buf::Ptr{Cvoid}, buf_type_id::hid_t, space_id::hid_t)\n\nSee libhdf5 documentation for H5Dfill.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_flush","page":"Low-level library bindings","title":"HDF5.API.h5d_flush","text":"h5d_flush(dataset_id::hid_t)\n\nSee libhdf5 documentation for H5Dflush.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_gather","page":"Low-level library bindings","title":"HDF5.API.h5d_gather","text":"h5d_gather(src_space_id::hid_t, src_buf::Ptr{Cvoid}, type_id::hid_t, dst_buf_size::Csize_t, dst_buf::Ptr{Cvoid}, op::Ptr{Cvoid}, op_data::Any)\n\nSee libhdf5 documentation for H5Dgather.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_access_plist","page":"Low-level library bindings","title":"HDF5.API.h5d_get_access_plist","text":"h5d_get_access_plist(dataset_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Dget_access_plist.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_chunk_info","page":"Low-level library bindings","title":"HDF5.API.h5d_get_chunk_info","text":"h5d_get_chunk_info(dataset_id::hid_t, fspace_id::hid_t, index::hsize_t, offset::Ptr{hsize_t}, filter_mask::Ptr{Cuint}, addr::Ptr{haddr_t}, size::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dget_chunk_info.\n\n\n\n\n\nh5d_get_chunk_info(dataset_id, fspace_id, index)\nh5d_get_chunk_info(dataset_id, index; fspace_id = HDF5.API.H5S_ALL)\n\nHelper method to retrieve chunk information.\n\nReturns a NamedTuple{(:offset, :filter_mask, :addr, :size), Tuple{HDF5.API.hsize_t, UInt32, HDF5.API.haddr_t, HDF5.API.hsize_t}}.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_chunk_info_by_coord","page":"Low-level library bindings","title":"HDF5.API.h5d_get_chunk_info_by_coord","text":"h5d_get_chunk_info_by_coord(dataset_id::hid_t, offset::Ptr{hsize_t}, filter_mask::Ptr{Cuint}, addr::Ptr{haddr_t}, size::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dget_chunk_info_by_coord.\n\n\n\n\n\nh5d_get_chunk_info_by_coord(dataset_id, offset)\n\nHelper method to read chunk information by coordinate. Returns a NamedTuple{(:filter_mask, :addr, :size), Tuple{UInt32, HDF5.API.haddr_t, HDF5.API.hsize_t}}.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_chunk_storage_size","page":"Low-level library bindings","title":"HDF5.API.h5d_get_chunk_storage_size","text":"h5d_get_chunk_storage_size(dataset_id::hid_t, offset::Ptr{hsize_t}, chunk_nbytes::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dget_chunk_storage_size.\n\n\n\n\n\nh5d_get_chunk_storage_size(dataset_id, offset)\n\nHelper method to retrieve the chunk storage size in bytes. Returns an integer of type HDF5.API.hsize_t.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_create_plist","page":"Low-level library bindings","title":"HDF5.API.h5d_get_create_plist","text":"h5d_get_create_plist(dataset_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Dget_create_plist.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_num_chunks","page":"Low-level library bindings","title":"HDF5.API.h5d_get_num_chunks","text":"h5d_get_num_chunks(dataset_id::hid_t, fspace_id::hid_t, nchunks::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dget_num_chunks.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_offset","page":"Low-level library bindings","title":"HDF5.API.h5d_get_offset","text":"h5d_get_offset(dataset_id::hid_t) -> haddr_t\n\nSee libhdf5 documentation for H5Dget_offset.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_space","page":"Low-level library bindings","title":"HDF5.API.h5d_get_space","text":"h5d_get_space(dataset_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Dget_space.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_space_status","page":"Low-level library bindings","title":"HDF5.API.h5d_get_space_status","text":"h5d_get_space_status(dataset_id::hid_t, status::Ref{Cint})\n\nSee libhdf5 documentation for H5Dget_space_status.\n\n\n\n\n\nh5d_get_space_status(dataset_id)\n\nHelper method to retrieve the status of the dataset space. Returns a HDF5.API.H5D_space_status_t (Cint) indicating the status, see HDF5.API.H5D_SPACE_STATUS_* constants.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_storage_size","page":"Low-level library bindings","title":"HDF5.API.h5d_get_storage_size","text":"h5d_get_storage_size(dataset_id::hid_t) -> hsize_t\n\nSee libhdf5 documentation for H5Dget_storage_size.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_get_type","page":"Low-level library bindings","title":"HDF5.API.h5d_get_type","text":"h5d_get_type(dataset_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Dget_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_iterate","page":"Low-level library bindings","title":"HDF5.API.h5d_iterate","text":"h5d_iterate(buf::Ptr{Cvoid}, type_id::hid_t, space_id::hid_t, operator::Ptr{Cvoid}, operator_data::Any)\n\nSee libhdf5 documentation for H5Diterate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_open","page":"Low-level library bindings","title":"HDF5.API.h5d_open","text":"h5d_open(loc_id::hid_t, pathname::Ptr{UInt8}, dapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Dopen2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_read","page":"Low-level library bindings","title":"HDF5.API.h5d_read","text":"h5d_read(dataset_id::hid_t, mem_type_id::hid_t, mem_space_id::hid_t, file_space_id::hid_t, xfer_plist_id::hid_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Dread.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_read_chunk","page":"Low-level library bindings","title":"HDF5.API.h5d_read_chunk","text":"h5d_read_chunk(dset::hid_t, dxpl_id::hid_t, offset::Ptr{hsize_t}, filters::Ptr{UInt32}, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Dread_chunk.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_refresh","page":"Low-level library bindings","title":"HDF5.API.h5d_refresh","text":"h5d_refresh(dataset_id::hid_t)\n\nSee libhdf5 documentation for H5Drefresh.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_scatter","page":"Low-level library bindings","title":"HDF5.API.h5d_scatter","text":"h5d_scatter(op::Ptr{Cvoid}, op_data::Any, type_id::hid_t, dst_space_id::hid_t, dst_buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Dscatter.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_set_extent","page":"Low-level library bindings","title":"HDF5.API.h5d_set_extent","text":"h5d_set_extent(dataset_id::hid_t, new_dims::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dset_extent.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_vlen_get_buf_size","page":"Low-level library bindings","title":"HDF5.API.h5d_vlen_get_buf_size","text":"h5d_vlen_get_buf_size(dset_id::hid_t, type_id::hid_t, space_id::hid_t, buf::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Dvlen_get_buf_size.\n\n\n\n\n\nh5d_vlen_get_buf_size(dataset_id, type_id, space_id)\n\nHelper method to determines the number of bytes required to store the variable length data from the dataset. Returns a value of type HDF5.API.hsize_t.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_vlen_reclaim","page":"Low-level library bindings","title":"HDF5.API.h5d_vlen_reclaim","text":"h5d_vlen_reclaim(type_id::hid_t, space_id::hid_t, plist_id::hid_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Dvlen_reclaim.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_write","page":"Low-level library bindings","title":"HDF5.API.h5d_write","text":"h5d_write(dataset_id::hid_t, mem_type_id::hid_t, mem_space_id::hid_t, file_space_id::hid_t, xfer_plist_id::hid_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Dwrite.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5d_write_chunk","page":"Low-level library bindings","title":"HDF5.API.h5d_write_chunk","text":"h5d_write_chunk(dset_id::hid_t, dxpl_id::hid_t, filter_mask::UInt32, offset::Ptr{hsize_t}, bufsize::Csize_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Dwrite_chunk.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5E","page":"Low-level library bindings","title":"H5E — Error Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5e_close_stack\nh5e_get_auto\nh5e_get_current_stack\nh5e_get_msg\nh5e_get_num\nh5e_set_auto\nh5e_walk","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5e_close_stack\nh5e_get_auto\nh5e_get_current_stack\nh5e_get_msg\nh5e_get_num\nh5e_set_auto\nh5e_walk","category":"page"},{"location":"api_bindings/#HDF5.API.h5e_close_stack","page":"Low-level library bindings","title":"HDF5.API.h5e_close_stack","text":"h5e_close_stack(stack_id::hid_t)\n\nSee libhdf5 documentation for H5Eclose_stack.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5e_get_auto","page":"Low-level library bindings","title":"HDF5.API.h5e_get_auto","text":"h5e_get_auto(estack_id::hid_t, func::Ref{Ptr{Cvoid}}, client_data::Ref{Ptr{Cvoid}})\n\nSee libhdf5 documentation for H5Eget_auto2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5e_get_current_stack","page":"Low-level library bindings","title":"HDF5.API.h5e_get_current_stack","text":"h5e_get_current_stack() -> hid_t\n\nSee libhdf5 documentation for H5Eget_current_stack.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5e_get_msg","page":"Low-level library bindings","title":"HDF5.API.h5e_get_msg","text":"h5e_get_msg(mesg_id::hid_t, mesg_type::Ref{Cint}, mesg::Ref{UInt8}, len::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Eget_msg.\n\n\n\n\n\nmesg_type, mesg = h5e_get_msg(meshg_id)\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5e_get_num","page":"Low-level library bindings","title":"HDF5.API.h5e_get_num","text":"h5e_get_num(estack_id::hid_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Eget_num.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5e_set_auto","page":"Low-level library bindings","title":"HDF5.API.h5e_set_auto","text":"h5e_set_auto(estack_id::hid_t, func::Ptr{Cvoid}, client_data::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Eset_auto2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5e_walk","page":"Low-level library bindings","title":"HDF5.API.h5e_walk","text":"h5e_walk(stack_id::hid_t, direction::Cint, op::Ptr{Cvoid}, op_data::Any)\n\nSee libhdf5 documentation for H5Ewalk2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5F","page":"Low-level library bindings","title":"H5F — File Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5f_close\nh5f_create\nh5f_flush\nh5f_get_access_plist\nh5f_get_create_plist\nh5f_get_intent\nh5f_get_name\nh5f_get_obj_count\nh5f_get_obj_ids\nh5f_get_vfd_handle\nh5f_is_hdf5\nh5f_open\nh5f_start_swmr_write","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5f_close\nh5f_create\nh5f_flush\nh5f_get_access_plist\nh5f_get_create_plist\nh5f_get_intent\nh5f_get_name\nh5f_get_obj_count\nh5f_get_obj_ids\nh5f_get_vfd_handle\nh5f_is_hdf5\nh5f_open\nh5f_start_swmr_write","category":"page"},{"location":"api_bindings/#HDF5.API.h5f_close","page":"Low-level library bindings","title":"HDF5.API.h5f_close","text":"h5f_close(file_id::hid_t)\n\nSee libhdf5 documentation for H5Fclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_create","page":"Low-level library bindings","title":"HDF5.API.h5f_create","text":"h5f_create(pathname::Ptr{UInt8}, flags::Cuint, fcpl_id::hid_t, fapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Fcreate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_flush","page":"Low-level library bindings","title":"HDF5.API.h5f_flush","text":"h5f_flush(object_id::hid_t, scope::Cint)\n\nSee libhdf5 documentation for H5Fflush.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_access_plist","page":"Low-level library bindings","title":"HDF5.API.h5f_get_access_plist","text":"h5f_get_access_plist(file_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Fget_access_plist.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_create_plist","page":"Low-level library bindings","title":"HDF5.API.h5f_get_create_plist","text":"h5f_get_create_plist(file_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Fget_create_plist.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_intent","page":"Low-level library bindings","title":"HDF5.API.h5f_get_intent","text":"h5f_get_intent(file_id::hid_t, intent::Ptr{Cuint})\n\nSee libhdf5 documentation for H5Fget_intent.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_name","page":"Low-level library bindings","title":"HDF5.API.h5f_get_name","text":"h5f_get_name(obj_id::hid_t, buf::Ptr{UInt8}, buf_size::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Fget_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_obj_count","page":"Low-level library bindings","title":"HDF5.API.h5f_get_obj_count","text":"h5f_get_obj_count(file_id::hid_t, types::Cuint) -> Cssize_t\n\nSee libhdf5 documentation for H5Fget_obj_count.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_obj_ids","page":"Low-level library bindings","title":"HDF5.API.h5f_get_obj_ids","text":"h5f_get_obj_ids(file_id::hid_t, types::Cuint, max_objs::Csize_t, obj_id_list::Ptr{hid_t}) -> Cssize_t\n\nSee libhdf5 documentation for H5Fget_obj_ids.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_get_vfd_handle","page":"Low-level library bindings","title":"HDF5.API.h5f_get_vfd_handle","text":"h5f_get_vfd_handle(file_id::hid_t, fapl_id::hid_t, file_handle::Ref{Ptr{Cvoid}})\n\nSee libhdf5 documentation for H5Fget_vfd_handle.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_is_hdf5","page":"Low-level library bindings","title":"HDF5.API.h5f_is_hdf5","text":"h5f_is_hdf5(pathname::Cstring) -> Bool\n\nSee libhdf5 documentation for H5Fis_hdf5.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_open","page":"Low-level library bindings","title":"HDF5.API.h5f_open","text":"h5f_open(pathname::Cstring, flags::Cuint, fapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Fopen.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5f_start_swmr_write","page":"Low-level library bindings","title":"HDF5.API.h5f_start_swmr_write","text":"h5f_start_swmr_write(id::hid_t)\n\nSee libhdf5 documentation for H5Fstart_swmr_write.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5G","page":"Low-level library bindings","title":"H5G — Group Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5g_close\nh5g_create\nh5g_get_create_plist\nh5g_get_info\nh5g_get_num_objs\nh5g_get_objname_by_idx\nh5g_open","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5g_close\nh5g_create\nh5g_get_create_plist\nh5g_get_info\nh5g_get_num_objs\nh5g_get_objname_by_idx\nh5g_open","category":"page"},{"location":"api_bindings/#HDF5.API.h5g_close","page":"Low-level library bindings","title":"HDF5.API.h5g_close","text":"h5g_close(group_id::hid_t)\n\nSee libhdf5 documentation for H5Gclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5g_create","page":"Low-level library bindings","title":"HDF5.API.h5g_create","text":"h5g_create(loc_id::hid_t, pathname::Ptr{UInt8}, lcpl_id::hid_t, gcpl_id::hid_t, gapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Gcreate2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5g_get_create_plist","page":"Low-level library bindings","title":"HDF5.API.h5g_get_create_plist","text":"h5g_get_create_plist(group_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Gget_create_plist.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5g_get_info","page":"Low-level library bindings","title":"HDF5.API.h5g_get_info","text":"h5g_get_info(group_id::hid_t, buf::Ptr{H5G_info_t})\n\nSee libhdf5 documentation for H5Gget_info.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5g_get_num_objs","page":"Low-level library bindings","title":"HDF5.API.h5g_get_num_objs","text":"h5g_get_num_objs(loc_id::hid_t, num_obj::Ptr{hsize_t}) -> hid_t\n\nSee libhdf5 documentation for H5Gget_num_objs.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5g_get_objname_by_idx","page":"Low-level library bindings","title":"HDF5.API.h5g_get_objname_by_idx","text":"h5g_get_objname_by_idx(loc_id::hid_t, idx::hsize_t, pathname::Ptr{UInt8}, size::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Gget_objname_by_idx.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5g_open","page":"Low-level library bindings","title":"HDF5.API.h5g_open","text":"h5g_open(loc_id::hid_t, pathname::Ptr{UInt8}, gapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Gopen2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5I","page":"Low-level library bindings","title":"H5I — Identifier Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5i_dec_ref\nh5i_get_file_id\nh5i_get_name\nh5i_get_ref\nh5i_get_type\nh5i_inc_ref\nh5i_is_valid","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5i_dec_ref\nh5i_get_file_id\nh5i_get_name\nh5i_get_ref\nh5i_get_type\nh5i_inc_ref\nh5i_is_valid","category":"page"},{"location":"api_bindings/#HDF5.API.h5i_dec_ref","page":"Low-level library bindings","title":"HDF5.API.h5i_dec_ref","text":"h5i_dec_ref(obj_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Idec_ref.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5i_get_file_id","page":"Low-level library bindings","title":"HDF5.API.h5i_get_file_id","text":"h5i_get_file_id(obj_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Iget_file_id.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5i_get_name","page":"Low-level library bindings","title":"HDF5.API.h5i_get_name","text":"h5i_get_name(obj_id::hid_t, buf::Ptr{UInt8}, buf_size::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Iget_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5i_get_ref","page":"Low-level library bindings","title":"HDF5.API.h5i_get_ref","text":"h5i_get_ref(obj_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Iget_ref.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5i_get_type","page":"Low-level library bindings","title":"HDF5.API.h5i_get_type","text":"h5i_get_type(obj_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Iget_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5i_inc_ref","page":"Low-level library bindings","title":"HDF5.API.h5i_inc_ref","text":"h5i_inc_ref(obj_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Iinc_ref.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5i_is_valid","page":"Low-level library bindings","title":"HDF5.API.h5i_is_valid","text":"h5i_is_valid(obj_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Iis_valid.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5L","page":"Low-level library bindings","title":"H5L — Link Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5l_create_external\nh5l_create_hard\nh5l_create_soft\nh5l_delete\nh5l_exists\nh5l_get_info\nh5l_get_name_by_idx\nh5l_iterate\nh5l_move","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5l_create_external\nh5l_create_hard\nh5l_create_soft\nh5l_delete\nh5l_exists\nh5l_get_info\nh5l_get_name_by_idx\nh5l_iterate\nh5l_move","category":"page"},{"location":"api_bindings/#HDF5.API.h5l_create_external","page":"Low-level library bindings","title":"HDF5.API.h5l_create_external","text":"h5l_create_external(target_file_name::Ptr{UInt8}, target_obj_name::Ptr{UInt8}, link_loc_id::hid_t, link_name::Ptr{UInt8}, lcpl_id::hid_t, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Lcreate_external.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_create_hard","page":"Low-level library bindings","title":"HDF5.API.h5l_create_hard","text":"h5l_create_hard(obj_loc_id::hid_t, obj_name::Ptr{UInt8}, link_loc_id::hid_t, link_name::Ptr{UInt8}, lcpl_id::hid_t, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Lcreate_hard.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_create_soft","page":"Low-level library bindings","title":"HDF5.API.h5l_create_soft","text":"h5l_create_soft(target_path::Ptr{UInt8}, link_loc_id::hid_t, link_name::Ptr{UInt8}, lcpl_id::hid_t, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Lcreate_soft.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_delete","page":"Low-level library bindings","title":"HDF5.API.h5l_delete","text":"h5l_delete(obj_id::hid_t, pathname::Ptr{UInt8}, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Ldelete.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_exists","page":"Low-level library bindings","title":"HDF5.API.h5l_exists","text":"h5l_exists(loc_id::hid_t, pathname::Ptr{UInt8}, lapl_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Lexists.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_get_info","page":"Low-level library bindings","title":"HDF5.API.h5l_get_info","text":"h5l_get_info(link_loc_id::hid_t, link_name::Ptr{UInt8}, link_buf::Ptr{H5L_info_t}, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Lget_info.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_get_name_by_idx","page":"Low-level library bindings","title":"HDF5.API.h5l_get_name_by_idx","text":"h5l_get_name_by_idx(loc_id::hid_t, group_name::Ptr{UInt8}, index_field::Cint, order::Cint, n::hsize_t, name::Ptr{UInt8}, size::Csize_t, lapl_id::hid_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Lget_name_by_idx.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_iterate","page":"Low-level library bindings","title":"HDF5.API.h5l_iterate","text":"h5l_iterate(group_id::hid_t, idx_type::Cint, order::Cint, idx::Ptr{hsize_t}, op::Ptr{Cvoid}, op_data::Any)\n\nSee libhdf5 documentation for H5Literate1.\n\n\n\n\n\nh5l_iterate(f, group_id, idx_type, order, idx = 0) -> hsize_t\n\nExecutes h5l_iterate with the user-provided callback function f, returning the index where iteration ends.\n\nThe callback function must correspond to the signature\n\n    f(group::HDF5.API.hid_t, name::Ptr{Cchar}, info::Ptr{HDF5.API.H5L_info_t}) -> HDF5.API.herr_t\n\nwhere a negative return value halts iteration abnormally, a positive value halts iteration successfully, and zero continues iteration.\n\nExamples\n\njulia> HDF5.API.h5l_iterate(hfile, HDF5.API.H5_INDEX_NAME, HDF5.API.H5_ITER_INC) do group, name, info\n           println(unsafe_string(name))\n           return HDF5.API.herr_t(0)\n       end\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5l_move","page":"Low-level library bindings","title":"HDF5.API.h5l_move","text":"h5l_move(src_obj_id::hid_t, src_name::Ptr{UInt8}, dest_obj_id::hid_t, dest_name::Ptr{UInt8}, lcpl_id::hid_t, lapl_id::hid_t)\n\nSee libhdf5 documentation for H5Lmove.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5O","page":"Low-level library bindings","title":"H5O — Object Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5o_close\nh5o_copy\nh5o_get_info\nh5o_open\nh5o_open_by_addr\nh5o_open_by_idx","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5o_close\nh5o_copy\nh5o_get_info\nh5o_open\nh5o_open_by_addr\nh5o_open_by_idx","category":"page"},{"location":"api_bindings/#HDF5.API.h5o_close","page":"Low-level library bindings","title":"HDF5.API.h5o_close","text":"h5o_close(object_id::hid_t)\n\nSee libhdf5 documentation for H5Oclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5o_copy","page":"Low-level library bindings","title":"HDF5.API.h5o_copy","text":"h5o_copy(src_loc_id::hid_t, src_name::Ptr{UInt8}, dst_loc_id::hid_t, dst_name::Ptr{UInt8}, ocpypl_id::hid_t, lcpl_id::hid_t)\n\nSee libhdf5 documentation for H5Ocopy.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5o_get_info","page":"Low-level library bindings","title":"HDF5.API.h5o_get_info","text":"h5o_get_info(object_id::hid_t, buf::Ptr{H5O_info_t})\n\nSee libhdf5 documentation for H5Oget_info1.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5o_open","page":"Low-level library bindings","title":"HDF5.API.h5o_open","text":"h5o_open(loc_id::hid_t, pathname::Ptr{UInt8}, lapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Oopen.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5o_open_by_addr","page":"Low-level library bindings","title":"HDF5.API.h5o_open_by_addr","text":"h5o_open_by_addr(loc_id::hid_t, addr::haddr_t) -> hid_t\n\nSee libhdf5 documentation for H5Oopen_by_addr.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5o_open_by_idx","page":"Low-level library bindings","title":"HDF5.API.h5o_open_by_idx","text":"h5o_open_by_idx(loc_id::hid_t, group_name::Ptr{UInt8}, index_type::Cint, order::Cint, n::hsize_t, lapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Oopen_by_idx.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5PL","page":"Low-level library bindings","title":"H5PL — Plugin Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5pl_append\nh5pl_get\nh5pl_get_loading_state\nh5pl_insert\nh5pl_prepend\nh5pl_remove\nh5pl_replace\nh5pl_set_loading_state\nh5pl_size","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5pl_append\nh5pl_get\nh5pl_get_loading_state\nh5pl_insert\nh5pl_prepend\nh5pl_remove\nh5pl_replace\nh5pl_set_loading_state\nh5pl_size","category":"page"},{"location":"api_bindings/#HDF5.API.h5pl_append","page":"Low-level library bindings","title":"HDF5.API.h5pl_append","text":"h5pl_append(search_path::Ptr{Cchar})\n\nSee libhdf5 documentation for H5PLappend.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_get","page":"Low-level library bindings","title":"HDF5.API.h5pl_get","text":"h5pl_get(index::Cuint, path_buf::Ptr{Cchar}, buf_size::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5PLget.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_get_loading_state","page":"Low-level library bindings","title":"HDF5.API.h5pl_get_loading_state","text":"h5pl_get_loading_state(plugin_control_mask::Ptr{Cuint})\n\nSee libhdf5 documentation for H5PLget_loading_state.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_insert","page":"Low-level library bindings","title":"HDF5.API.h5pl_insert","text":"h5pl_insert(search_path::Ptr{Cchar}, index::Cuint)\n\nSee libhdf5 documentation for H5PLinsert.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_prepend","page":"Low-level library bindings","title":"HDF5.API.h5pl_prepend","text":"h5pl_prepend(search_path::Ptr{Cchar})\n\nSee libhdf5 documentation for H5PLprepend.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_remove","page":"Low-level library bindings","title":"HDF5.API.h5pl_remove","text":"h5pl_remove(index::Cuint)\n\nSee libhdf5 documentation for H5PLremove.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_replace","page":"Low-level library bindings","title":"HDF5.API.h5pl_replace","text":"h5pl_replace(search_path::Ptr{Cchar}, index::Cuint)\n\nSee libhdf5 documentation for H5PLreplace.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_set_loading_state","page":"Low-level library bindings","title":"HDF5.API.h5pl_set_loading_state","text":"h5pl_set_loading_state(plugin_control_mask::Cuint)\n\nSee libhdf5 documentation for H5PLset_loading_state.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5pl_size","page":"Low-level library bindings","title":"HDF5.API.h5pl_size","text":"h5pl_size(num_paths::Ptr{Cuint})\n\nSee libhdf5 documentation for H5PLsize.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5P","page":"Low-level library bindings","title":"H5P — Property Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5p_close\nh5p_create\nh5p_get_alignment\nh5p_get_alloc_time\nh5p_get_char_encoding\nh5p_get_chunk\nh5p_get_class_name\nh5p_get_create_intermediate_group\nh5p_get_driver\nh5p_get_driver_info\nh5p_get_dxpl_mpio\nh5p_get_efile_prefix\nh5p_get_external\nh5p_get_external_count\nh5p_get_fapl_mpio32\nh5p_get_fapl_mpio64\nh5p_get_fclose_degree\nh5p_get_filter\nh5p_get_filter_by_id\nh5p_get_layout\nh5p_get_libver_bounds\nh5p_get_local_heap_size_hint\nh5p_get_nfilters\nh5p_get_obj_track_times\nh5p_get_userblock\nh5p_modify_filter\nh5p_remove_filter\nh5p_set_alignment\nh5p_set_alloc_time\nh5p_set_char_encoding\nh5p_set_chunk\nh5p_set_chunk_cache\nh5p_set_create_intermediate_group\nh5p_set_deflate\nh5p_set_dxpl_mpio\nh5p_set_efile_prefix\nh5p_set_external\nh5p_set_fapl_mpio32\nh5p_set_fapl_mpio64\nh5p_set_fapl_sec2\nh5p_set_fclose_degree\nh5p_set_filter\nh5p_set_fletcher32\nh5p_set_layout\nh5p_set_libver_bounds\nh5p_set_local_heap_size_hint\nh5p_set_nbit\nh5p_set_obj_track_times\nh5p_set_scaleoffset\nh5p_set_shuffle\nh5p_set_szip\nh5p_set_userblock\nh5p_set_virtual","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5p_close\nh5p_create\nh5p_get_alignment\nh5p_get_alloc_time\nh5p_get_char_encoding\nh5p_get_chunk\nh5p_get_class_name\nh5p_get_create_intermediate_group\nh5p_get_driver\nh5p_get_driver_info\nh5p_get_dxpl_mpio\nh5p_get_efile_prefix\nh5p_get_external\nh5p_get_external_count\nh5p_get_fapl_mpio32\nh5p_get_fapl_mpio64\nh5p_get_fclose_degree\nh5p_get_filter\nh5p_get_filter_by_id\nh5p_get_layout\nh5p_get_libver_bounds\nh5p_get_local_heap_size_hint\nh5p_get_nfilters\nh5p_get_obj_track_times\nh5p_get_userblock\nh5p_modify_filter\nh5p_remove_filter\nh5p_set_alignment\nh5p_set_alloc_time\nh5p_set_char_encoding\nh5p_set_chunk\nh5p_set_chunk_cache\nh5p_set_create_intermediate_group\nh5p_set_deflate\nh5p_set_dxpl_mpio\nh5p_set_efile_prefix\nh5p_set_external\nh5p_set_fapl_mpio32\nh5p_set_fapl_mpio64\nh5p_set_fapl_sec2\nh5p_set_fclose_degree\nh5p_set_filter\nh5p_set_fletcher32\nh5p_set_layout\nh5p_set_libver_bounds\nh5p_set_local_heap_size_hint\nh5p_set_nbit\nh5p_set_obj_track_times\nh5p_set_scaleoffset\nh5p_set_shuffle\nh5p_set_szip\nh5p_set_userblock\nh5p_set_virtual","category":"page"},{"location":"api_bindings/#HDF5.API.h5p_close","page":"Low-level library bindings","title":"HDF5.API.h5p_close","text":"h5p_close(id::hid_t)\n\nSee libhdf5 documentation for H5Pclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_create","page":"Low-level library bindings","title":"HDF5.API.h5p_create","text":"h5p_create(cls_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Pcreate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_alignment","page":"Low-level library bindings","title":"HDF5.API.h5p_get_alignment","text":"h5p_get_alignment(fapl_id::hid_t, threshold::Ref{hsize_t}, alignment::Ref{hsize_t})\n\nSee libhdf5 documentation for H5Pget_alignment.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_alloc_time","page":"Low-level library bindings","title":"HDF5.API.h5p_get_alloc_time","text":"h5p_get_alloc_time(plist_id::hid_t, alloc_time::Ptr{Cint})\n\nSee libhdf5 documentation for H5Pget_alloc_time.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_char_encoding","page":"Low-level library bindings","title":"HDF5.API.h5p_get_char_encoding","text":"h5p_get_char_encoding(plist_id::hid_t, encoding::Ref{Cint})\n\nSee libhdf5 documentation for H5Pget_char_encoding.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_chunk","page":"Low-level library bindings","title":"HDF5.API.h5p_get_chunk","text":"h5p_get_chunk(plist_id::hid_t, n_dims::Cint, dims::Ptr{hsize_t}) -> Int\n\nSee libhdf5 documentation for H5Pget_chunk.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_class_name","page":"Low-level library bindings","title":"HDF5.API.h5p_get_class_name","text":"h5p_get_class_name(pcid::hid_t) -> String\n\nSee libhdf5 documentation for H5P_GET_CLASS_NAME.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_create_intermediate_group","page":"Low-level library bindings","title":"HDF5.API.h5p_get_create_intermediate_group","text":"h5p_get_create_intermediate_group(lcpl_id::hid_t, crt_intermed_group::Ref{Cuint})\n\nSee libhdf5 documentation for H5Pget_create_intermediate_group.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_driver","page":"Low-level library bindings","title":"HDF5.API.h5p_get_driver","text":"h5p_get_driver(plist_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Pget_driver.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_driver_info","page":"Low-level library bindings","title":"HDF5.API.h5p_get_driver_info","text":"h5p_get_driver_info(plist_id::hid_t) -> Ptr{Cvoid}\n\nSee libhdf5 documentation for H5Pget_driver_info.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_dxpl_mpio","page":"Low-level library bindings","title":"HDF5.API.h5p_get_dxpl_mpio","text":"h5p_get_dxpl_mpio(dxpl_id::hid_t, xfer_mode::Ptr{Cint})\n\nSee libhdf5 documentation for H5Pget_dxpl_mpio.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_efile_prefix","page":"Low-level library bindings","title":"HDF5.API.h5p_get_efile_prefix","text":"h5p_get_efile_prefix(dapl_id::hid_t, prefix::Ptr{UInt8}, size::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5Pget_efile_prefix.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_external","page":"Low-level library bindings","title":"HDF5.API.h5p_get_external","text":"h5p_get_external(plist::hid_t, idx::Cuint, name_size::Csize_t, name::Ptr{Cuchar}, offset::Ptr{off_t}, size::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Pget_external.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_external_count","page":"Low-level library bindings","title":"HDF5.API.h5p_get_external_count","text":"h5p_get_external_count(plist::hid_t) -> Int\n\nSee libhdf5 documentation for H5Pget_external_count.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_fapl_mpio32","page":"Low-level library bindings","title":"HDF5.API.h5p_get_fapl_mpio32","text":"h5p_get_fapl_mpio32(fapl_id::hid_t, comm::Ptr{Hmpih32}, info::Ptr{Hmpih32})\n\nSee libhdf5 documentation for H5Pget_fapl_mpio.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_fapl_mpio64","page":"Low-level library bindings","title":"HDF5.API.h5p_get_fapl_mpio64","text":"h5p_get_fapl_mpio64(fapl_id::hid_t, comm::Ptr{Hmpih64}, info::Ptr{Hmpih64})\n\nSee libhdf5 documentation for H5Pget_fapl_mpio.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_fclose_degree","page":"Low-level library bindings","title":"HDF5.API.h5p_get_fclose_degree","text":"h5p_get_fclose_degree(fapl_id::hid_t, fc_degree::Ref{Cint})\n\nSee libhdf5 documentation for H5Pget_fclose_degree.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_filter","page":"Low-level library bindings","title":"HDF5.API.h5p_get_filter","text":"h5p_get_filter(plist_id::hid_t, idx::Cuint, flags::Ptr{Cuint}, cd_nemlts::Ref{Csize_t}, cd_values::Ptr{Cuint}, namelen::Csize_t, name::Ptr{Cchar}, filter_config::Ptr{Cuint}) -> H5Z_filter_t\n\nSee libhdf5 documentation for H5Pget_filter2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_filter_by_id","page":"Low-level library bindings","title":"HDF5.API.h5p_get_filter_by_id","text":"h5p_get_filter_by_id(plist_id::hid_t, filter_id::H5Z_filter_t, flags::Ref{Cuint}, cd_nelmts::Ref{Csize_t}, cd_values::Ptr{Cuint}, namelen::Csize_t, name::Ptr{UInt8}, filter_config::Ptr{Cuint})\n\nSee libhdf5 documentation for H5Pget_filter_by_id2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_layout","page":"Low-level library bindings","title":"HDF5.API.h5p_get_layout","text":"h5p_get_layout(plist_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Pget_layout.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_libver_bounds","page":"Low-level library bindings","title":"HDF5.API.h5p_get_libver_bounds","text":"h5p_get_libver_bounds(fapl_id::hid_t, low::Ref{Cint}, high::Ref{Cint})\n\nSee libhdf5 documentation for H5Pget_libver_bounds.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_local_heap_size_hint","page":"Low-level library bindings","title":"HDF5.API.h5p_get_local_heap_size_hint","text":"h5p_get_local_heap_size_hint(plist_id::hid_t, size_hint::Ref{Csize_t})\n\nSee libhdf5 documentation for H5Pget_local_heap_size_hint.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_nfilters","page":"Low-level library bindings","title":"HDF5.API.h5p_get_nfilters","text":"h5p_get_nfilters(plist_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Pget_nfilters.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_obj_track_times","page":"Low-level library bindings","title":"HDF5.API.h5p_get_obj_track_times","text":"h5p_get_obj_track_times(plist_id::hid_t, track_times::Ref{UInt8})\n\nSee libhdf5 documentation for H5Pget_obj_track_times.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_get_userblock","page":"Low-level library bindings","title":"HDF5.API.h5p_get_userblock","text":"h5p_get_userblock(plist_id::hid_t, len::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Pget_userblock.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_modify_filter","page":"Low-level library bindings","title":"HDF5.API.h5p_modify_filter","text":"h5p_modify_filter(plist_id::hid_t, filter_id::H5Z_filter_t, flags::Cuint, cd_nelmts::Csize_t, cd_values::Ptr{Cuint})\n\nSee libhdf5 documentation for H5Pmodify_filter.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_remove_filter","page":"Low-level library bindings","title":"HDF5.API.h5p_remove_filter","text":"h5p_remove_filter(plist_id::hid_t, filter_id::H5Z_filter_t)\n\nSee libhdf5 documentation for H5Premove_filter.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_alignment","page":"Low-level library bindings","title":"HDF5.API.h5p_set_alignment","text":"h5p_set_alignment(plist_id::hid_t, threshold::hsize_t, alignment::hsize_t)\n\nSee libhdf5 documentation for H5Pset_alignment.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_alloc_time","page":"Low-level library bindings","title":"HDF5.API.h5p_set_alloc_time","text":"h5p_set_alloc_time(plist_id::hid_t, alloc_time::Cint)\n\nSee libhdf5 documentation for H5Pset_alloc_time.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_char_encoding","page":"Low-level library bindings","title":"HDF5.API.h5p_set_char_encoding","text":"h5p_set_char_encoding(plist_id::hid_t, encoding::Cint)\n\nSee libhdf5 documentation for H5Pset_char_encoding.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_chunk","page":"Low-level library bindings","title":"HDF5.API.h5p_set_chunk","text":"h5p_set_chunk(plist_id::hid_t, ndims::Cint, dims::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Pset_chunk.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_chunk_cache","page":"Low-level library bindings","title":"HDF5.API.h5p_set_chunk_cache","text":"h5p_set_chunk_cache(dapl_id::hid_t, rdcc_nslots::Csize_t, rdcc_nbytes::Csize_t, rdcc_w0::Cdouble)\n\nSee libhdf5 documentation for H5Pset_chunk_cache.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_create_intermediate_group","page":"Low-level library bindings","title":"HDF5.API.h5p_set_create_intermediate_group","text":"h5p_set_create_intermediate_group(plist_id::hid_t, setting::Cuint)\n\nSee libhdf5 documentation for H5Pset_create_intermediate_group.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_deflate","page":"Low-level library bindings","title":"HDF5.API.h5p_set_deflate","text":"h5p_set_deflate(plist_id::hid_t, setting::Cuint)\n\nSee libhdf5 documentation for H5Pset_deflate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_dxpl_mpio","page":"Low-level library bindings","title":"HDF5.API.h5p_set_dxpl_mpio","text":"h5p_set_dxpl_mpio(dxpl_id::hid_t, xfer_mode::Cint)\n\nSee libhdf5 documentation for H5Pset_dxpl_mpio.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_efile_prefix","page":"Low-level library bindings","title":"HDF5.API.h5p_set_efile_prefix","text":"h5p_set_efile_prefix(plist_id::hid_t, prefix::Ptr{UInt8})\n\nSee libhdf5 documentation for H5Pset_efile_prefix.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_external","page":"Low-level library bindings","title":"HDF5.API.h5p_set_external","text":"h5p_set_external(plist_id::hid_t, name::Ptr{UInt8}, offset::off_t, size::Csize_t)\n\nSee libhdf5 documentation for H5Pset_external.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_fapl_mpio32","page":"Low-level library bindings","title":"HDF5.API.h5p_set_fapl_mpio32","text":"h5p_set_fapl_mpio32(fapl_id::hid_t, comm::Hmpih32, info::Hmpih32)\n\nSee libhdf5 documentation for H5Pset_fapl_mpio.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_fapl_mpio64","page":"Low-level library bindings","title":"HDF5.API.h5p_set_fapl_mpio64","text":"h5p_set_fapl_mpio64(fapl_id::hid_t, comm::Hmpih64, info::Hmpih64)\n\nSee libhdf5 documentation for H5Pset_fapl_mpio.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_fapl_sec2","page":"Low-level library bindings","title":"HDF5.API.h5p_set_fapl_sec2","text":"h5p_set_fapl_sec2(fapl_id::hid_t)\n\nSee libhdf5 documentation for H5Pset_fapl_sec2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_fclose_degree","page":"Low-level library bindings","title":"HDF5.API.h5p_set_fclose_degree","text":"h5p_set_fclose_degree(plist_id::hid_t, fc_degree::Cint)\n\nSee libhdf5 documentation for H5Pset_fclose_degree.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_filter","page":"Low-level library bindings","title":"HDF5.API.h5p_set_filter","text":"h5p_set_filter(plist_id::hid_t, filter_id::H5Z_filter_t, flags::Cuint, cd_nelmts::Csize_t, cd_values::Ptr{Cuint})\n\nSee libhdf5 documentation for H5Pset_filter.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_fletcher32","page":"Low-level library bindings","title":"HDF5.API.h5p_set_fletcher32","text":"h5p_set_fletcher32(plist_id::hid_t)\n\nSee libhdf5 documentation for H5Pset_fletcher32.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_layout","page":"Low-level library bindings","title":"HDF5.API.h5p_set_layout","text":"h5p_set_layout(plist_id::hid_t, setting::Cint)\n\nSee libhdf5 documentation for H5Pset_layout.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_libver_bounds","page":"Low-level library bindings","title":"HDF5.API.h5p_set_libver_bounds","text":"h5p_set_libver_bounds(fapl_id::hid_t, low::Cint, high::Cint)\n\nSee libhdf5 documentation for H5Pset_libver_bounds.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_local_heap_size_hint","page":"Low-level library bindings","title":"HDF5.API.h5p_set_local_heap_size_hint","text":"h5p_set_local_heap_size_hint(plist_id::hid_t, size_hint::Csize_t)\n\nSee libhdf5 documentation for H5Pset_local_heap_size_hint.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_nbit","page":"Low-level library bindings","title":"HDF5.API.h5p_set_nbit","text":"h5p_set_nbit(plist_id::hid_t)\n\nSee libhdf5 documentation for H5Pset_nbit.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_obj_track_times","page":"Low-level library bindings","title":"HDF5.API.h5p_set_obj_track_times","text":"h5p_set_obj_track_times(plist_id::hid_t, track_times::UInt8)\n\nSee libhdf5 documentation for H5Pset_obj_track_times.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_scaleoffset","page":"Low-level library bindings","title":"HDF5.API.h5p_set_scaleoffset","text":"h5p_set_scaleoffset(plist_id::hid_t, scale_type::Cint, scale_factor::Cint)\n\nSee libhdf5 documentation for H5Pset_scaleoffset.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_shuffle","page":"Low-level library bindings","title":"HDF5.API.h5p_set_shuffle","text":"h5p_set_shuffle(plist_id::hid_t)\n\nSee libhdf5 documentation for H5Pset_shuffle.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_szip","page":"Low-level library bindings","title":"HDF5.API.h5p_set_szip","text":"h5p_set_szip(plist_id::hid_t, options_mask::Cuint, pixels_per_block::Cuint)\n\nSee libhdf5 documentation for H5Pset_szip.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_userblock","page":"Low-level library bindings","title":"HDF5.API.h5p_set_userblock","text":"h5p_set_userblock(plist_id::hid_t, len::hsize_t)\n\nSee libhdf5 documentation for H5Pset_userblock.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5p_set_virtual","page":"Low-level library bindings","title":"HDF5.API.h5p_set_virtual","text":"h5p_set_virtual(dcpl_id::hid_t, vspace_id::hid_t, src_file_name::Ptr{UInt8}, src_dset_name::Ptr{UInt8}, src_space_id::hid_t)\n\nSee libhdf5 documentation for H5Pset_virtual.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5R","page":"Low-level library bindings","title":"H5R — Reference Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5r_create\nh5r_dereference\nh5r_get_obj_type\nh5r_get_region","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5r_create\nh5r_dereference\nh5r_get_obj_type\nh5r_get_region","category":"page"},{"location":"api_bindings/#HDF5.API.h5r_create","page":"Low-level library bindings","title":"HDF5.API.h5r_create","text":"h5r_create(ref::Ptr{Cvoid}, loc_id::hid_t, pathname::Ptr{UInt8}, ref_type::Cint, space_id::hid_t)\n\nSee libhdf5 documentation for H5Rcreate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5r_dereference","page":"Low-level library bindings","title":"HDF5.API.h5r_dereference","text":"h5r_dereference(obj_id::hid_t, oapl_id::hid_t, ref_type::Cint, ref::Ptr{Cvoid}) -> hid_t\n\nSee libhdf5 documentation for H5Rdereference2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5r_get_obj_type","page":"Low-level library bindings","title":"HDF5.API.h5r_get_obj_type","text":"h5r_get_obj_type(loc_id::hid_t, ref_type::Cint, ref::Ptr{Cvoid}, obj_type::Ptr{Cint})\n\nSee libhdf5 documentation for H5Rget_obj_type2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5r_get_region","page":"Low-level library bindings","title":"HDF5.API.h5r_get_region","text":"h5r_get_region(loc_id::hid_t, ref_type::Cint, ref::Ptr{Cvoid}) -> hid_t\n\nSee libhdf5 documentation for H5Rget_region.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5S","page":"Low-level library bindings","title":"H5S — Dataspace Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5s_close\nh5s_combine_select\nh5s_copy\nh5s_create\nh5s_create_simple\nh5s_extent_equal\nh5s_get_regular_hyperslab\nh5s_get_select_hyper_nblocks\nh5s_get_select_npoints\nh5s_get_select_type\nh5s_get_simple_extent_dims\nh5s_get_simple_extent_ndims\nh5s_get_simple_extent_type\nh5s_is_regular_hyperslab\nh5s_is_simple\nh5s_select_hyperslab\nh5s_set_extent_simple","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5s_close\nh5s_combine_select\nh5s_copy\nh5s_create\nh5s_create_simple\nh5s_extent_equal\nh5s_get_regular_hyperslab\nh5s_get_select_hyper_nblocks\nh5s_get_select_npoints\nh5s_get_select_type\nh5s_get_simple_extent_dims\nh5s_get_simple_extent_ndims\nh5s_get_simple_extent_type\nh5s_is_regular_hyperslab\nh5s_is_simple\nh5s_select_hyperslab\nh5s_set_extent_simple","category":"page"},{"location":"api_bindings/#HDF5.API.h5s_close","page":"Low-level library bindings","title":"HDF5.API.h5s_close","text":"h5s_close(space_id::hid_t)\n\nSee libhdf5 documentation for H5Sclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_combine_select","page":"Low-level library bindings","title":"HDF5.API.h5s_combine_select","text":"h5s_combine_select(space1_id::hid_t, op::Cint, space2_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Scombine_select.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_copy","page":"Low-level library bindings","title":"HDF5.API.h5s_copy","text":"h5s_copy(space_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Scopy.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_create","page":"Low-level library bindings","title":"HDF5.API.h5s_create","text":"h5s_create(class::Cint) -> hid_t\n\nSee libhdf5 documentation for H5Screate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_create_simple","page":"Low-level library bindings","title":"HDF5.API.h5s_create_simple","text":"h5s_create_simple(rank::Cint, current_dims::Ptr{hsize_t}, maximum_dims::Ptr{hsize_t}) -> hid_t\n\nSee libhdf5 documentation for H5Screate_simple.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_extent_equal","page":"Low-level library bindings","title":"HDF5.API.h5s_extent_equal","text":"h5s_extent_equal(space1_id::hid_t, space2_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Sextent_equal.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_regular_hyperslab","page":"Low-level library bindings","title":"HDF5.API.h5s_get_regular_hyperslab","text":"h5s_get_regular_hyperslab(space_id::hid_t, start::Ptr{hsize_t}, stride::Ptr{hsize_t}, count::Ptr{hsize_t}, block::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Sget_regular_hyperslab.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_select_hyper_nblocks","page":"Low-level library bindings","title":"HDF5.API.h5s_get_select_hyper_nblocks","text":"h5s_get_select_hyper_nblocks(space_id::hid_t) -> hssize_t\n\nSee libhdf5 documentation for H5Sget_select_hyper_nblocks.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_select_npoints","page":"Low-level library bindings","title":"HDF5.API.h5s_get_select_npoints","text":"h5s_get_select_npoints(space_id::hid_t) -> hsize_t\n\nSee libhdf5 documentation for H5Sget_select_npoints.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_select_type","page":"Low-level library bindings","title":"HDF5.API.h5s_get_select_type","text":"h5s_get_select_type(space_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Sget_select_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_simple_extent_dims","page":"Low-level library bindings","title":"HDF5.API.h5s_get_simple_extent_dims","text":"h5s_get_simple_extent_dims(space_id::hid_t, dims::Ptr{hsize_t}, maxdims::Ptr{hsize_t}) -> Int\n\nSee libhdf5 documentation for H5Sget_simple_extent_dims.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_simple_extent_ndims","page":"Low-level library bindings","title":"HDF5.API.h5s_get_simple_extent_ndims","text":"h5s_get_simple_extent_ndims(space_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Sget_simple_extent_ndims.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_get_simple_extent_type","page":"Low-level library bindings","title":"HDF5.API.h5s_get_simple_extent_type","text":"h5s_get_simple_extent_type(space_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Sget_simple_extent_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_is_regular_hyperslab","page":"Low-level library bindings","title":"HDF5.API.h5s_is_regular_hyperslab","text":"h5s_is_regular_hyperslab(space_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Sis_regular_hyperslab.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_is_simple","page":"Low-level library bindings","title":"HDF5.API.h5s_is_simple","text":"h5s_is_simple(space_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Sis_simple.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_select_hyperslab","page":"Low-level library bindings","title":"HDF5.API.h5s_select_hyperslab","text":"h5s_select_hyperslab(dspace_id::hid_t, seloper::Cint, start::Ptr{hsize_t}, stride::Ptr{hsize_t}, count::Ptr{hsize_t}, block::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Sselect_hyperslab.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5s_set_extent_simple","page":"Low-level library bindings","title":"HDF5.API.h5s_set_extent_simple","text":"h5s_set_extent_simple(dspace_id::hid_t, rank::Cint, current_size::Ptr{hsize_t}, maximum_size::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5Sset_extent_simple.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5T","page":"Low-level library bindings","title":"H5T — Datatype Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5t_array_create\nh5t_close\nh5t_commit\nh5t_committed\nh5t_copy\nh5t_create\nh5t_enum_insert\nh5t_equal\nh5t_get_array_dims\nh5t_get_array_ndims\nh5t_get_class\nh5t_get_cset\nh5t_get_ebias\nh5t_get_fields\nh5t_get_member_class\nh5t_get_member_index\nh5t_get_member_name\nh5t_get_member_offset\nh5t_get_member_type\nh5t_get_native_type\nh5t_get_nmembers\nh5t_get_sign\nh5t_get_size\nh5t_get_strpad\nh5t_get_super\nh5t_get_tag\nh5t_insert\nh5t_is_variable_str\nh5t_lock\nh5t_open\nh5t_set_cset\nh5t_set_ebias\nh5t_set_fields\nh5t_set_precision\nh5t_set_size\nh5t_set_strpad\nh5t_set_tag\nh5t_vlen_create","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5t_array_create\nh5t_close\nh5t_commit\nh5t_committed\nh5t_copy\nh5t_create\nh5t_enum_insert\nh5t_equal\nh5t_get_array_dims\nh5t_get_array_ndims\nh5t_get_class\nh5t_get_cset\nh5t_get_ebias\nh5t_get_fields\nh5t_get_member_class\nh5t_get_member_index\nh5t_get_member_name\nh5t_get_member_offset\nh5t_get_member_type\nh5t_get_native_type\nh5t_get_nmembers\nh5t_get_sign\nh5t_get_size\nh5t_get_strpad\nh5t_get_super\nh5t_get_tag\nh5t_insert\nh5t_is_variable_str\nh5t_lock\nh5t_open\nh5t_set_cset\nh5t_set_ebias\nh5t_set_fields\nh5t_set_precision\nh5t_set_size\nh5t_set_strpad\nh5t_set_tag\nh5t_vlen_create","category":"page"},{"location":"api_bindings/#HDF5.API.h5t_array_create","page":"Low-level library bindings","title":"HDF5.API.h5t_array_create","text":"h5t_array_create(basetype_id::hid_t, ndims::Cuint, sz::Ptr{hsize_t}) -> hid_t\n\nSee libhdf5 documentation for H5Tarray_create2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_close","page":"Low-level library bindings","title":"HDF5.API.h5t_close","text":"h5t_close(dtype_id::hid_t)\n\nSee libhdf5 documentation for H5Tclose.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_commit","page":"Low-level library bindings","title":"HDF5.API.h5t_commit","text":"h5t_commit(loc_id::hid_t, name::Ptr{UInt8}, dtype_id::hid_t, lcpl_id::hid_t, tcpl_id::hid_t, tapl_id::hid_t)\n\nSee libhdf5 documentation for H5Tcommit2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_committed","page":"Low-level library bindings","title":"HDF5.API.h5t_committed","text":"h5t_committed(dtype_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Tcommitted.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_copy","page":"Low-level library bindings","title":"HDF5.API.h5t_copy","text":"h5t_copy(dtype_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Tcopy.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_create","page":"Low-level library bindings","title":"HDF5.API.h5t_create","text":"h5t_create(class_id::Cint, sz::Csize_t) -> hid_t\n\nSee libhdf5 documentation for H5Tcreate.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_enum_insert","page":"Low-level library bindings","title":"HDF5.API.h5t_enum_insert","text":"h5t_enum_insert(dtype_id::hid_t, name::Cstring, value::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5Tenum_insert.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_equal","page":"Low-level library bindings","title":"HDF5.API.h5t_equal","text":"h5t_equal(dtype_id1::hid_t, dtype_id2::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Tequal.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_array_dims","page":"Low-level library bindings","title":"HDF5.API.h5t_get_array_dims","text":"h5t_get_array_dims(dtype_id::hid_t, dims::Ptr{hsize_t}) -> Int\n\nSee libhdf5 documentation for H5Tget_array_dims2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_array_ndims","page":"Low-level library bindings","title":"HDF5.API.h5t_get_array_ndims","text":"h5t_get_array_ndims(dtype_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Tget_array_ndims.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_class","page":"Low-level library bindings","title":"HDF5.API.h5t_get_class","text":"h5t_get_class(dtype_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Tget_class.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_cset","page":"Low-level library bindings","title":"HDF5.API.h5t_get_cset","text":"h5t_get_cset(dtype_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Tget_cset.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_ebias","page":"Low-level library bindings","title":"HDF5.API.h5t_get_ebias","text":"h5t_get_ebias(dtype_id::hid_t) -> Csize_t\n\nSee libhdf5 documentation for H5Tget_ebias.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_fields","page":"Low-level library bindings","title":"HDF5.API.h5t_get_fields","text":"h5t_get_fields(dtype_id::hid_t, spos::Ref{Csize_t}, epos::Ref{Csize_t}, esize::Ref{Csize_t}, mpos::Ref{Csize_t}, msize::Ref{Csize_t})\n\nSee libhdf5 documentation for H5Tget_fields.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_member_class","page":"Low-level library bindings","title":"HDF5.API.h5t_get_member_class","text":"h5t_get_member_class(dtype_id::hid_t, index::Cuint) -> Int\n\nSee libhdf5 documentation for H5Tget_member_class.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_member_index","page":"Low-level library bindings","title":"HDF5.API.h5t_get_member_index","text":"h5t_get_member_index(dtype_id::hid_t, membername::Ptr{UInt8}) -> Int\n\nSee libhdf5 documentation for H5Tget_member_index.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_member_name","page":"Low-level library bindings","title":"HDF5.API.h5t_get_member_name","text":"h5t_get_member_name(type_id::hid_t, index::Cuint) -> String\n\nSee libhdf5 documentation for H5Oopen.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_member_offset","page":"Low-level library bindings","title":"HDF5.API.h5t_get_member_offset","text":"h5t_get_member_offset(dtype_id::hid_t, index::Cuint) -> Csize_t\n\nSee libhdf5 documentation for H5Tget_member_offset.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_member_type","page":"Low-level library bindings","title":"HDF5.API.h5t_get_member_type","text":"h5t_get_member_type(dtype_id::hid_t, index::Cuint) -> hid_t\n\nSee libhdf5 documentation for H5Tget_member_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_native_type","page":"Low-level library bindings","title":"HDF5.API.h5t_get_native_type","text":"h5t_get_native_type(dtype_id::hid_t, direction::Cint) -> hid_t\n\nSee libhdf5 documentation for H5Tget_native_type.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_nmembers","page":"Low-level library bindings","title":"HDF5.API.h5t_get_nmembers","text":"h5t_get_nmembers(dtype_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Tget_nmembers.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_sign","page":"Low-level library bindings","title":"HDF5.API.h5t_get_sign","text":"h5t_get_sign(dtype_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Tget_sign.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_size","page":"Low-level library bindings","title":"HDF5.API.h5t_get_size","text":"h5t_get_size(dtype_id::hid_t) -> Csize_t\n\nSee libhdf5 documentation for H5Tget_size.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_strpad","page":"Low-level library bindings","title":"HDF5.API.h5t_get_strpad","text":"h5t_get_strpad(dtype_id::hid_t) -> Int\n\nSee libhdf5 documentation for H5Tget_strpad.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_super","page":"Low-level library bindings","title":"HDF5.API.h5t_get_super","text":"h5t_get_super(dtype_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Tget_super.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_get_tag","page":"Low-level library bindings","title":"HDF5.API.h5t_get_tag","text":"h5t_get_tag(type_id::hid_t) -> String\n\nSee libhdf5 documentation for H5Oopen.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_insert","page":"Low-level library bindings","title":"HDF5.API.h5t_insert","text":"h5t_insert(dtype_id::hid_t, fieldname::Ptr{UInt8}, offset::Csize_t, field_id::hid_t)\n\nSee libhdf5 documentation for H5Tinsert.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_is_variable_str","page":"Low-level library bindings","title":"HDF5.API.h5t_is_variable_str","text":"h5t_is_variable_str(type_id::hid_t) -> Bool\n\nSee libhdf5 documentation for H5Tis_variable_str.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_lock","page":"Low-level library bindings","title":"HDF5.API.h5t_lock","text":"h5t_lock(type_id::hid_t)\n\nSee libhdf5 documentation for H5Tlock.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_open","page":"Low-level library bindings","title":"HDF5.API.h5t_open","text":"h5t_open(loc_id::hid_t, name::Ptr{UInt8}, tapl_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Topen2.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_cset","page":"Low-level library bindings","title":"HDF5.API.h5t_set_cset","text":"h5t_set_cset(dtype_id::hid_t, cset::Cint)\n\nSee libhdf5 documentation for H5Tset_cset.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_ebias","page":"Low-level library bindings","title":"HDF5.API.h5t_set_ebias","text":"h5t_set_ebias(dtype_id::hid_t, ebias::Csize_t)\n\nSee libhdf5 documentation for H5Tset_ebias.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_fields","page":"Low-level library bindings","title":"HDF5.API.h5t_set_fields","text":"h5t_set_fields(dtype_id::hid_t, spos::Csize_t, epos::Csize_t, esize::Csize_t, mpos::Csize_t, msize::Csize_t)\n\nSee libhdf5 documentation for H5Tset_fields.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_precision","page":"Low-level library bindings","title":"HDF5.API.h5t_set_precision","text":"h5t_set_precision(dtype_id::hid_t, sz::Csize_t)\n\nSee libhdf5 documentation for H5Tset_precision.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_size","page":"Low-level library bindings","title":"HDF5.API.h5t_set_size","text":"h5t_set_size(dtype_id::hid_t, sz::Csize_t)\n\nSee libhdf5 documentation for H5Tset_size.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_strpad","page":"Low-level library bindings","title":"HDF5.API.h5t_set_strpad","text":"h5t_set_strpad(dtype_id::hid_t, sz::Cint)\n\nSee libhdf5 documentation for H5Tset_strpad.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_set_tag","page":"Low-level library bindings","title":"HDF5.API.h5t_set_tag","text":"h5t_set_tag(dtype_id::hid_t, tag::Cstring)\n\nSee libhdf5 documentation for H5Tset_tag.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5t_vlen_create","page":"Low-level library bindings","title":"HDF5.API.h5t_vlen_create","text":"h5t_vlen_create(base_type_id::hid_t) -> hid_t\n\nSee libhdf5 documentation for H5Tvlen_create.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5Z","page":"Low-level library bindings","title":"H5Z — Filter Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5z_filter_avail\nh5z_get_filter_info\nh5z_register\nh5z_unregister","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5z_filter_avail\nh5z_get_filter_info\nh5z_register\nh5z_unregister","category":"page"},{"location":"api_bindings/#HDF5.API.h5z_filter_avail","page":"Low-level library bindings","title":"HDF5.API.h5z_filter_avail","text":"h5z_filter_avail(id::H5Z_filter_t) -> Bool\n\nSee libhdf5 documentation for H5Zfilter_avail.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5z_get_filter_info","page":"Low-level library bindings","title":"HDF5.API.h5z_get_filter_info","text":"h5z_get_filter_info(filter::H5Z_filter_t, filter_config_flags::Ptr{Cuint})\n\nSee libhdf5 documentation for H5Zget_filter_info.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5z_register","page":"Low-level library bindings","title":"HDF5.API.h5z_register","text":"h5z_register(filter_class::Ref{H5Z_class_t})\n\nSee libhdf5 documentation for H5Zregister.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5z_unregister","page":"Low-level library bindings","title":"HDF5.API.h5z_unregister","text":"h5z_unregister(id::H5Z_filter_t)\n\nSee libhdf5 documentation for H5Zunregister.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5DO","page":"Low-level library bindings","title":"H5DO — Optimized Functions Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5do_append\nh5do_write_chunk","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5do_append\nh5do_write_chunk","category":"page"},{"location":"api_bindings/#HDF5.API.h5do_append","page":"Low-level library bindings","title":"HDF5.API.h5do_append","text":"h5do_append(dset_id::hid_t, dxpl_id::hid_t, index::Cuint, num_elem::hsize_t, memtype::hid_t, buffer::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5DOappend.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5do_write_chunk","page":"Low-level library bindings","title":"HDF5.API.h5do_write_chunk","text":"h5do_write_chunk(dset_id::hid_t, dxpl_id::hid_t, filter_mask::UInt32, offset::Ptr{hsize_t}, bufsize::Csize_t, buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5DOwrite_chunk.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5DS","page":"Low-level library bindings","title":"H5DS — Dimension Scale Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5ds_attach_scale\nh5ds_detach_scale\nh5ds_get_label\nh5ds_get_num_scales\nh5ds_get_scale_name\nh5ds_is_attached\nh5ds_is_scale\nh5ds_set_label\nh5ds_set_scale","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5ds_attach_scale\nh5ds_detach_scale\nh5ds_get_label\nh5ds_get_num_scales\nh5ds_get_scale_name\nh5ds_is_attached\nh5ds_is_scale\nh5ds_set_label\nh5ds_set_scale","category":"page"},{"location":"api_bindings/#HDF5.API.h5ds_attach_scale","page":"Low-level library bindings","title":"HDF5.API.h5ds_attach_scale","text":"h5ds_attach_scale(did::hid_t, dsid::hid_t, idx::Cuint)\n\nSee libhdf5 documentation for H5DSattach_scale.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_detach_scale","page":"Low-level library bindings","title":"HDF5.API.h5ds_detach_scale","text":"h5ds_detach_scale(did::hid_t, dsid::hid_t, idx::Cuint)\n\nSee libhdf5 documentation for H5DSdetach_scale.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_get_label","page":"Low-level library bindings","title":"HDF5.API.h5ds_get_label","text":"h5ds_get_label(did::hid_t, idx::Cuint, label::Ptr{UInt8}, size::hsize_t)\n\nSee libhdf5 documentation for H5DSget_label.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_get_num_scales","page":"Low-level library bindings","title":"HDF5.API.h5ds_get_num_scales","text":"h5ds_get_num_scales(did::hid_t, idx::Cuint) -> Int\n\nSee libhdf5 documentation for H5DSget_num_scales.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_get_scale_name","page":"Low-level library bindings","title":"HDF5.API.h5ds_get_scale_name","text":"h5ds_get_scale_name(did::hid_t, name::Ptr{UInt8}, size::Csize_t) -> Cssize_t\n\nSee libhdf5 documentation for H5DSget_scale_name.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_is_attached","page":"Low-level library bindings","title":"HDF5.API.h5ds_is_attached","text":"h5ds_is_attached(did::hid_t, dsid::hid_t, idx::Cuint) -> Bool\n\nSee libhdf5 documentation for H5DSis_attached.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_is_scale","page":"Low-level library bindings","title":"HDF5.API.h5ds_is_scale","text":"h5ds_is_scale(did::hid_t) -> Bool\n\nSee libhdf5 documentation for H5DSis_scale.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_set_label","page":"Low-level library bindings","title":"HDF5.API.h5ds_set_label","text":"h5ds_set_label(did::hid_t, idx::Cuint, label::Ref{UInt8})\n\nSee libhdf5 documentation for H5DSset_label.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5ds_set_scale","page":"Low-level library bindings","title":"HDF5.API.h5ds_set_scale","text":"h5ds_set_scale(dsid::hid_t, dimname::Ptr{UInt8})\n\nSee libhdf5 documentation for H5DSset_scale.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5LT","page":"Low-level library bindings","title":"H5LT — Lite Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5lt_dtype_to_text","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5lt_dtype_to_text","category":"page"},{"location":"api_bindings/#HDF5.API.h5lt_dtype_to_text","page":"Low-level library bindings","title":"HDF5.API.h5lt_dtype_to_text","text":"h5lt_dtype_to_text(datatype::hid_t, str::Ptr{UInt8}, lang_type::Cint, len::Ref{Csize_t})\n\nSee libhdf5 documentation for H5LTdtype_to_text.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"","category":"page"},{"location":"api_bindings/#H5TB","page":"Low-level library bindings","title":"H5TB — Table Interface","text":"","category":"section"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5tb_append_records\nh5tb_get_field_info\nh5tb_get_table_info\nh5tb_make_table\nh5tb_read_records\nh5tb_read_table\nh5tb_write_records","category":"page"},{"location":"api_bindings/","page":"Low-level library bindings","title":"Low-level library bindings","text":"h5tb_append_records\nh5tb_get_field_info\nh5tb_get_table_info\nh5tb_make_table\nh5tb_read_records\nh5tb_read_table\nh5tb_write_records","category":"page"},{"location":"api_bindings/#HDF5.API.h5tb_append_records","page":"Low-level library bindings","title":"HDF5.API.h5tb_append_records","text":"h5tb_append_records(loc_id::hid_t, dset_name::Ptr{UInt8}, nrecords::hsize_t, type_size::Csize_t, field_offset::Ptr{Csize_t}, field_sizes::Ptr{Csize_t}, data::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5TBappend_records.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5tb_get_field_info","page":"Low-level library bindings","title":"HDF5.API.h5tb_get_field_info","text":"h5tb_get_field_info(loc_id::hid_t, table_name::Ptr{UInt8}, field_names::Ptr{Ptr{UInt8}}, field_sizes::Ptr{Csize_t}, field_offsets::Ptr{Csize_t}, type_size::Ptr{Csize_t})\n\nSee libhdf5 documentation for H5TBget_field_info.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5tb_get_table_info","page":"Low-level library bindings","title":"HDF5.API.h5tb_get_table_info","text":"h5tb_get_table_info(loc_id::hid_t, table_name::Ptr{UInt8}, nfields::Ptr{hsize_t}, nrecords::Ptr{hsize_t})\n\nSee libhdf5 documentation for H5TBget_table_info.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5tb_make_table","page":"Low-level library bindings","title":"HDF5.API.h5tb_make_table","text":"h5tb_make_table(table_title::Ptr{UInt8}, loc_id::hid_t, dset_name::Ptr{UInt8}, nfields::hsize_t, nrecords::hsize_t, type_size::Csize_t, field_names::Ptr{Ptr{UInt8}}, field_offset::Ptr{Csize_t}, field_types::Ptr{hid_t}, chunk_size::hsize_t, fill_data::Ptr{Cvoid}, compress::Cint, data::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5TBmake_table.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5tb_read_records","page":"Low-level library bindings","title":"HDF5.API.h5tb_read_records","text":"h5tb_read_records(loc_id::hid_t, table_name::Ptr{UInt8}, start::hsize_t, nrecords::hsize_t, type_size::Csize_t, field_offsets::Ptr{Csize_t}, dst_sizes::Ptr{Csize_t}, data::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5TBread_records.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5tb_read_table","page":"Low-level library bindings","title":"HDF5.API.h5tb_read_table","text":"h5tb_read_table(loc_id::hid_t, table_name::Ptr{UInt8}, dst_size::Csize_t, dst_offset::Ptr{Csize_t}, dst_sizes::Ptr{Csize_t}, dst_buf::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5TBread_table.\n\n\n\n\n\n","category":"function"},{"location":"api_bindings/#HDF5.API.h5tb_write_records","page":"Low-level library bindings","title":"HDF5.API.h5tb_write_records","text":"h5tb_write_records(loc_id::hid_t, table_name::Ptr{UInt8}, start::hsize_t, nrecords::hsize_t, type_size::Csize_t, field_offsets::Ptr{UInt8}, field_sizes::Ptr{UInt8}, data::Ptr{Cvoid})\n\nSee libhdf5 documentation for H5TBwrite_records.\n\n\n\n\n\n","category":"function"}]
}
